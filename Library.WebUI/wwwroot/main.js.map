{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/AppHttpInterceptor.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/author/author.component.html","webpack:///./src/app/components/author/author.component.ts","webpack:///./src/app/components/book/book.component.html","webpack:///./src/app/components/book/book.component.ts","webpack:///./src/app/components/brochure/brochure.component.html","webpack:///./src/app/components/brochure/brochure.component.ts","webpack:///./src/app/components/login-form/login-form.component.html","webpack:///./src/app/components/login-form/login-form.component.scss","webpack:///./src/app/components/login-form/login-form.component.ts","webpack:///./src/app/components/magazine/magazine.component.html","webpack:///./src/app/components/magazine/magazine.component.ts","webpack:///./src/app/components/navmenu/navmenu.component.html","webpack:///./src/app/components/navmenu/navmenu.component.scss","webpack:///./src/app/components/navmenu/navmenu.component.ts","webpack:///./src/app/components/publicationHouse/publicationHouse.component.html","webpack:///./src/app/components/publicationHouse/publicationHouse.component.ts","webpack:///./src/app/components/registration-form/registration-form.component.html","webpack:///./src/app/components/registration-form/registration-form.component.ts","webpack:///./src/app/components/user/user.component.html","webpack:///./src/app/components/user/user.component.ts","webpack:///./src/app/models/author/GetAllAuthorsViewModel.ts","webpack:///./src/app/models/book/GetAllBooksViewModel.ts","webpack:///./src/app/models/brochure/GetAllBrochuresViewModel.ts","webpack:///./src/app/models/identity/user.ts","webpack:///./src/app/models/identity/userRegistration.ts","webpack:///./src/app/models/magazine/GetAllMagazinesViewModel.ts","webpack:///./src/app/models/publicationHouse/GetAllPublicationHousesViewModel.ts","webpack:///./src/app/services/author.service.ts","webpack:///./src/app/services/book.service.ts","webpack:///./src/app/services/brochure.service.ts","webpack:///./src/app/services/identity/base.service.ts","webpack:///./src/app/services/identity/login.service.ts","webpack:///./src/app/services/identity/user.service.ts","webpack:///./src/app/services/magazine.service.ts","webpack:///./src/app/services/publicationHouse.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\n@Injectable()\r\nexport class AppHttpInterceptor implements HttpInterceptor {\r\n\r\n    private token: string;\r\n\r\n    constructor(private router: Router) {\r\n        this.getToken();\r\n    }\r\n\r\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (this.token) {\r\n            req = req.clone({ setHeaders: { 'Authorization': 'Bearer ' + this.token } });\r\n        }\r\n        console.log(req);\r\n        return next.handle(req)\r\n            .map(resp => {\r\n                if (resp instanceof HttpResponse) {\r\n                    return resp;\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                if (err instanceof HttpErrorResponse) {\r\n                    console.log(err.status);\r\n                    console.log(err.statusText);\r\n                    if (err.status === 401) {\r\n                        this.router.navigate(['/login']);\r\n                    }\r\n                }\r\n                return Observable.of(err);\r\n            });\r\n    }\r\n\r\n    private getToken() {\r\n        if (localStorage.getItem(\"data\")) {\r\n            this.token = JSON.parse(localStorage.getItem(\"data\")).token;\r\n        }\r\n    }\r\n}\r\n","module.exports = \" @media (max-width: 767px) {\\r\\n  /* On small screens, the nav menu spans the full width of the screen. Leave a space for it. */\\r\\n  .body-content {\\r\\n    padding-top: 50px;\\r\\n  }\\r\\n}\\r\\n\"","module.exports = \"<div class='container-fluid'>\\r\\n  <div class='row'>\\r\\n    <div class='col-sm-3'>\\r\\n      <nav-menu></nav-menu>\\r\\n    </div>\\r\\n    <div class='col-sm-9 body-content'>\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'; \r\nimport { RouterModule } from '@angular/router';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './components/navmenu/navmenu.component';\r\nimport { AuthorComponent } from './components/author/author.component';\r\nimport { MagazineComponent } from './components/magazine/magazine.component';\r\nimport { BrochureComponent } from './components/brochure/brochure.component';\r\nimport { PublicationHouseComponent } from './components/publicationHouse/publicationHouse.component';\r\nimport { BookComponent } from './components/book/book.component';\r\n\r\nimport { GridModule } from '@progress/kendo-angular-grid';\nimport { DropDownsModule } from '@progress/kendo-angular-dropdowns';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\r\nimport { RegistrationFormComponent } from './components/registration-form/registration-form.component';\r\nimport { UserService } from './services/identity/user.service';\r\nimport { LoginFormComponent } from \"./components/login-form/login-form.component\";\r\nimport { UserComponent } from \"./components/user/user.component\";\r\nimport { AppHttpInterceptor } from \"./AppHttpInterceptor\";\r\nimport { LoginService } from \"./services/identity/login.service\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        NavMenuComponent,\r\n        AuthorComponent,\r\n        MagazineComponent,\r\n        BrochureComponent,\r\n        PublicationHouseComponent,\r\n        BookComponent,\r\n        UserComponent,\r\n        RegistrationFormComponent,\r\n        LoginFormComponent,\r\n        AppComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        CommonModule,\r\n        FormsModule,\r\n        HttpClientModule,\r\n        RouterModule\r\n            .forRoot([\r\n                { path: '', redirectTo: 'book', pathMatch: 'full' },\r\n                { path: 'author', component: AuthorComponent },\r\n                { path: \"magazine\", component: MagazineComponent },\r\n                { path: 'brochure', component: BrochureComponent },\r\n                { path: 'publicationHouse', component: PublicationHouseComponent },\r\n                { path: 'book', component: BookComponent },\r\n                { path: 'register', component: RegistrationFormComponent },\r\n                { path: 'login', component: LoginFormComponent },\r\n                { path: 'user', component: UserComponent },\r\n                { path: '**', redirectTo: '' }\r\n            ])\r\n        ,\r\n        GridModule,\r\n        DropDownsModule,\r\n        BrowserAnimationsModule\r\n    ],\r\n    providers: [\r\n        LoginService,\r\n        UserService,\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: AppHttpInterceptor,\r\n            multi: true\r\n        }\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<kendo-grid [data]=\\\"authors.authors\\\"\\r\\n            [height]=\\\"533\\\"\\r\\n            [pageSize]=\\\"gridState.take\\\" [skip]=\\\"gridState.skip\\\" [sort]=\\\"gridState.sort\\\"\\r\\n            [pageable]=\\\"true\\\" [sortable]=\\\"true\\\"\\r\\n            (dataStateChange)=\\\"onStateChange($event)\\\"\\r\\n            (edit)=\\\"editHandler($event)\\\" (cancel)=\\\"cancelHandler($event)\\\"\\r\\n            (save)=\\\"saveHandler($event)\\\" (remove)=\\\"removeHandler($event)\\\"\\r\\n            (add)=\\\"addHandler($event)\\\"\\r\\n            [navigable]=\\\"true\\\">\\r\\n  <ng-container *ngIf=\\\"admin\\\">\\r\\n    <ng-template kendoGridToolbarTemplate>\\r\\n      <button kendoGridAddCommand>Add new</button>\\r\\n    </ng-template>\\r\\n  </ng-container>\\r\\n  <kendo-grid-column field=\\\"name\\\" title=\\\"Name\\\"></kendo-grid-column>\\r\\n  <ng-container *ngIf=\\\"admin\\\">\\r\\n    <kendo-grid-command-column title=\\\"command\\\" width=\\\"220\\\">\\r\\n      <ng-template kendoGridCellTemplate let-isNew=\\\"isNew\\\">\\r\\n        <button kendoGridEditCommand [primary]=\\\"true\\\">Edit</button>\\r\\n        <button kendoGridRemoveCommand>Remove</button>\\r\\n        <button kendoGridSaveCommand [disabled]=\\\"formGroup?.invalid\\\">{{ isNew ? 'Add' : 'Update' }}</button>\\r\\n        <button kendoGridCancelCommand>{{ isNew ? 'Discard changes' : 'Cancel' }}</button>\\r\\n      </ng-template>\\r\\n    </kendo-grid-command-column>\\r\\n  </ng-container>\\r\\n</kendo-grid>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\nimport { AuthorService } from '../../services/author.service';\r\nimport { GetAllAuthorsViewModel } from '../../models/author/GetAllAuthorsViewModel';\r\nimport { CreateAuthorViewModel } from '../../models/author/CreateAuthorViewModel';\r\nimport { UpdateAuthorViewModel } from '../../models/author/UpdateAuthorViewModel';\r\n\r\nimport { GridDataResult } from '@progress/kendo-angular-grid';\nimport { State, process } from '@progress/kendo-data-query';\r\nimport { UserService } from '../../services/identity/user.service';\r\n\r\n@Component({\r\n    selector: 'author',\r\n    templateUrl: './author.component.html',\r\n    providers: [AuthorService, UserService]\r\n})\r\n\r\nexport class AuthorComponent implements OnInit {\r\n\n    public authors: GetAllAuthorsViewModel;\n    public gridState: State = {\n        sort: [],\n        skip: 0,\n        take: 10\n    };\n    public formGroup: FormGroup;\n    private editedRowIndex: number;\r\n    private admin: boolean;\r\n\r\n    constructor(private dataService: AuthorService, private userService: UserService) {\r\n        this.authors = new GetAllAuthorsViewModel();\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.loadData();\r\n        this.admin = this.userService.getIsAdmin();\r\n    }\n\n    private loadData() {\n        this.dataService.get().subscribe(data => this.authors = data);\r\n    }\n\n    public addHandler({ sender }) {\n        this.closeEditor(sender);\n\n        this.formGroup = new FormGroup(\n            {\n                'id': new FormControl(0),\n                'name': new FormControl('', Validators.required),\n            }\n        );\n\n        sender.addRow(this.formGroup);\n    }\n\n    public editHandler({ sender, rowIndex, dataItem }) {\n        this.closeEditor(sender);\n\n        this.formGroup = new FormGroup(\n            {\n                'id': new FormControl(dataItem.id),\n                'name': new FormControl(dataItem.name, Validators.required),\n            }\n        );\n\n        this.editedRowIndex = rowIndex;\n\n        sender.editRow(rowIndex, this.formGroup);\n    }\n\n    public cancelHandler({ sender, rowIndex }) {\n        this.closeEditor(sender, rowIndex);\n    }\n\n    public saveHandler({ sender, rowIndex, formGroup, isNew }) {\n        if (isNew) {\n            const product: CreateAuthorViewModel = formGroup.value;\n            this.dataService.create(product)\r\n                .subscribe(() => this.loadData());\r\n        }\n        if (!isNew) {\n            const product: UpdateAuthorViewModel = formGroup.value;\n            this.dataService.update(product)\r\n                .subscribe(() => this.loadData());\r\n        }\n        sender.closeRow(rowIndex);\n    }\n\n    public removeHandler({ dataItem }) {\n        this.dataService.delete(dataItem.id)\n            .subscribe(() => this.loadData());\n    }\n\n    private closeEditor(grid, rowIndex = this.editedRowIndex) {\n        grid.closeRow(rowIndex);\n        this.editedRowIndex = undefined;\n        this.formGroup = undefined;\n    }\r\n}\r\n","module.exports = \"<kendo-grid [data]=\\\"books.books\\\"\\r\\n            [height]=\\\"533\\\"\\r\\n            [pageSize]=\\\"gridState.take\\\" [skip]=\\\"gridState.skip\\\" [sort]=\\\"gridState.sort\\\"\\r\\n            [pageable]=\\\"true\\\" [sortable]=\\\"true\\\"\\r\\n            (dataStateChange)=\\\"onStateChange($event)\\\"\\r\\n            (edit)=\\\"editHandler($event)\\\" (cancel)=\\\"cancelHandler($event)\\\"\\r\\n            (save)=\\\"saveHandler($event)\\\" (remove)=\\\"removeHandler($event)\\\"\\r\\n            (add)=\\\"addHandler($event)\\\"\\r\\n            [navigable]=\\\"true\\\">\\r\\n  <ng-container *ngIf=\\\"admin\\\">\\r\\n    <ng-template kendoGridToolbarTemplate>\\r\\n      <button kendoGridAddCommand>Add new</button>\\r\\n    </ng-template>\\r\\n  </ng-container>\\r\\n  <kendo-grid-column field=\\\"name\\\" title=\\\"Name\\\"></kendo-grid-column>\\r\\n  <kendo-grid-column field=\\\"author.name\\\" title=\\\"Author\\\">\\r\\n    <ng-template kendoGridEditTemplate let-dataItem=\\\"dataItem\\\" >\\r\\n      <kendo-dropdownlist\\r\\n        name=\\\"dataItem.author\\\"\\r\\n        [data]=\\\"authors.authors\\\"\\r\\n                         textField=\\\"name\\\"\\r\\n                          valueField=\\\"id\\\"\\r\\n                          [(ngModel)]=\\\"dataItem.author\\\"\\r\\n                          (valueChange)=\\\"authorChange($event)\\\">\\r\\n      </kendo-dropdownlist>\\r\\n    </ng-template>\\r\\n  </kendo-grid-column>\\r\\n  <kendo-grid-column field=\\\"yearOfPublication\\\" title=\\\"Year Of Publication\\\"></kendo-grid-column>\\r\\n  <kendo-grid-column field=\\\"publicationHouses\\\" title=\\\"Publication Houses\\\">\\r\\n    <ng-template kendoGridCellTemplate let-dataItem=\\\"dataItem\\\">\\r\\n\\r\\n      <span *ngFor=\\\"let publicationHouse of dataItem.publicationHouses\\\">{{publicationHouse.name}}, </span>\\r\\n\\r\\n    </ng-template>\\r\\n    <ng-template kendoGridEditTemplate let-dataItem=\\\"dataItem\\\">\\r\\n      <kendo-multiselect\\r\\n        name=\\\"dataItem.publicationHouses\\\"\\r\\n        [data]=\\\"publicationHouses.publicationHouses\\\"\\r\\n        textField=\\\"name\\\"\\r\\n        valueField=\\\"id\\\"\\r\\n        [(ngModel)]=\\\"dataItem.publicationHouses\\\"\\r\\n        (valueChange)=\\\"publicationHousesChange($event)\\\">\\r\\n      </kendo-multiselect>\\r\\n    </ng-template>\\r\\n  </kendo-grid-column>\\r\\n  <ng-container *ngIf=\\\"admin\\\">\\r\\n    <kendo-grid-command-column title=\\\"command\\\" width=\\\"220\\\">\\r\\n      <ng-template kendoGridCellTemplate let-isNew=\\\"isNew\\\">\\r\\n        <button kendoGridEditCommand [primary]=\\\"true\\\">Edit</button>\\r\\n        <button kendoGridRemoveCommand>Remove</button>\\r\\n        <button kendoGridSaveCommand [disabled]=\\\"formGroup?.invalid\\\">{{ isNew ? 'Add' : 'Update' }}</button>\\r\\n        <button kendoGridCancelCommand>{{ isNew ? 'Discard changes' : 'Cancel' }}</button>\\r\\n      </ng-template>\\r\\n    </kendo-grid-command-column>\\r\\n  </ng-container>\\r\\n</kendo-grid>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\nimport { BookService } from '../../services/book.service';\r\nimport { AuthorService } from '../../services/author.service';\r\nimport { PublicationHouseService } from '../../services/publicationHouse.service';\r\n\r\nimport { GetAllPublicationHousesViewModel } from '../../models/publicationHouse/GetAllPublicationHousesViewModel';\r\nimport { GetAllAuthorsViewModel } from '../../models/author/GetAllAuthorsViewModel';\r\nimport { CreateBookViewModel } from '../../models/book/CreateBookViewModel';\r\nimport { UpdateBookViewModel } from '../../models/book/UpdateBookViewModel';\r\nimport { GetAllBooksViewModel } from '../../models/book/GetAllBooksViewModel';\r\n\r\nimport { GridDataResult } from '@progress/kendo-angular-grid';\r\nimport { State, process } from '@progress/kendo-data-query';\r\nimport { DropDownsModule } from '@progress/kendo-angular-dropdowns';\r\nimport { UserService } from '../../services/identity/user.service';\r\n\r\n@Component({\r\n    selector: 'book',\r\n    templateUrl: './book.component.html',\r\n    providers: [BookService, AuthorService, PublicationHouseService, UserService]\r\n})\r\nexport class BookComponent implements OnInit {\r\n\r\n    public books: GetAllBooksViewModel;\r\n    public authors: GetAllAuthorsViewModel;\r\n    public publicationHouses: GetAllPublicationHousesViewModel;\r\n    public gridState: State = {\r\n        sort: [],\r\n        skip: 0,\r\n        take: 10\r\n    };\r\n    public formGroup: FormGroup;\r\n    private editedRowIndex: number;\r\n    private admin: boolean;\r\n\r\n    constructor(\r\n        private dataService: BookService,\r\n        private authorService: AuthorService,\r\n        private publicationHouseSevice: PublicationHouseService,\r\n        private userService: UserService\r\n    )\r\n    {\r\n        this.books = new GetAllBooksViewModel();\r\n        this.authors = new GetAllAuthorsViewModel();\r\n        this.publicationHouses = new GetAllPublicationHousesViewModel();\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.loadData();\r\n        this.authorService.get().subscribe(data => this.authors = data);\r\n        this.publicationHouseSevice.get().subscribe(data => this.publicationHouses = data);\r\n        this.admin = this.userService.getIsAdmin();\r\n    }\r\n\r\n    private loadData() {\r\n        this.dataService.get().subscribe(data => {\r\n            this.books = data\r\n        });\r\n    }\r\n\r\n    public addHandler({ sender }) {\r\n        this.closeEditor(sender);\r\n\r\n        this.formGroup = new FormGroup(\r\n            {\r\n                'id': new FormControl(0),\r\n                'name': new FormControl('', Validators.required),\r\n                'yearOfPublication': new FormControl('', Validators.compose([Validators.required, Validators.pattern('^[0-9]{4}')])),\r\n                'author': new FormControl(''),\r\n                'publicationHouses': new FormControl('')\r\n            }\r\n        );\r\n\r\n        sender.addRow(this.formGroup);\r\n    }\r\n\r\n    public editHandler({ sender, rowIndex, dataItem }) {\r\n        this.closeEditor(sender);\r\n\r\n        this.formGroup = new FormGroup(\r\n            {\r\n                'id': new FormControl(dataItem.id),\r\n                'name': new FormControl(dataItem.name, Validators.required),\r\n                'yearOfPublication': new FormControl(dataItem.yearOfPublication, Validators.compose([Validators.required, Validators.pattern('^[0-9]{4}')])),\r\n                'author': new FormControl(dataItem.author),\r\n                'publicationHouses': new FormControl(dataItem.publicationHouses)\r\n            }\r\n        );\r\n\r\n        this.editedRowIndex = rowIndex;\r\n\r\n        sender.editRow(rowIndex, this.formGroup);\r\n    }\r\n\r\n    public cancelHandler({ sender, rowIndex }) {\r\n        this.closeEditor(sender, rowIndex);\r\n    }\r\n\r\n    public saveHandler({ sender, rowIndex, formGroup, isNew }) {\r\n        if (isNew) {\r\n            const product: CreateBookViewModel = formGroup.value;\r\n            this.dataService.create(product)\r\n                .subscribe(() => this.loadData());\r\n        }\r\n        if (!isNew) {\r\n            const product: UpdateBookViewModel = formGroup.value;\r\n            this.dataService.update(product)\r\n                .subscribe(() => this.loadData());\r\n        }\r\n        sender.closeRow(rowIndex);\r\n    }\r\n\r\n    public removeHandler({ dataItem }) {\r\n        this.dataService.delete(dataItem.id)\r\n            .subscribe(() => this.loadData());\r\n    }\r\n\r\n    private closeEditor(grid, rowIndex = this.editedRowIndex) {\r\n        grid.closeRow(rowIndex);\r\n        this.editedRowIndex = undefined;\r\n        this.formGroup = undefined;\r\n    }\r\n\r\n    private authorChange(value) {\r\n        this.formGroup.get('author').setValue(value);\r\n    }\r\n\r\n    private publicationHousesChange(value: Array<any>) {\r\n        this.formGroup.get('publicationHouses').setValue(value);\r\n    }\r\n}\r\n","module.exports = \"<kendo-grid [data]=\\\"brochures.brochures\\\"\\r\\n            [height]=\\\"533\\\"\\r\\n            [pageSize]=\\\"gridState.take\\\" [skip]=\\\"gridState.skip\\\" [sort]=\\\"gridState.sort\\\"\\r\\n            [pageable]=\\\"true\\\" [sortable]=\\\"true\\\"\\r\\n            (dataStateChange)=\\\"onStateChange($event)\\\"\\r\\n            (edit)=\\\"editHandler($event)\\\" (cancel)=\\\"cancelHandler($event)\\\"\\r\\n            (save)=\\\"saveHandler($event)\\\" (remove)=\\\"removeHandler($event)\\\"\\r\\n            (add)=\\\"addHandler($event)\\\"\\r\\n            [navigable]=\\\"true\\\">\\r\\n  <ng-container *ngIf=\\\"admin\\\">\\r\\n    <ng-template kendoGridToolbarTemplate>\\r\\n      <button kendoGridAddCommand>Add new</button>\\r\\n    </ng-template>\\r\\n  </ng-container>\\r\\n  <kendo-grid-column field=\\\"name\\\" title=\\\"Name\\\"></kendo-grid-column>\\r\\n  <kendo-grid-column field=\\\"typeOfCover\\\" title=\\\"Type Of Cover\\\"></kendo-grid-column>\\r\\n  <kendo-grid-column field=\\\"numberOfPages\\\" title=\\\"Number Of Pages\\\"></kendo-grid-column>\\r\\n  <ng-container *ngIf=\\\"admin\\\">\\r\\n    <kendo-grid-command-column title=\\\"command\\\" width=\\\"220\\\">\\r\\n      <ng-template kendoGridCellTemplate let-isNew=\\\"isNew\\\">\\r\\n        <button kendoGridEditCommand [primary]=\\\"true\\\">Edit</button>\\r\\n        <button kendoGridRemoveCommand>Remove</button>\\r\\n        <button kendoGridSaveCommand [disabled]=\\\"formGroup?.invalid\\\">{{ isNew ? 'Add' : 'Update' }}</button>\\r\\n        <button kendoGridCancelCommand>{{ isNew ? 'Discard changes' : 'Cancel' }}</button>\\r\\n      </ng-template>\\r\\n    </kendo-grid-command-column>\\r\\n  </ng-container>\\r\\n</kendo-grid>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\nimport { DataService } from '../../services/brochure.service';\r\nimport { GetAllBrochuresViewModel } from '../../models/brochure/GetAllBrochuresViewModel';\r\nimport { CreateBrochureViewModel } from '../../models/brochure/CreateBrochureViewModel';\r\nimport { UpdateBrochureViewModel } from '../../models/brochure/UpdateBrochureViewModel';\r\n\r\nimport { GridDataResult } from '@progress/kendo-angular-grid';\nimport { State, process } from '@progress/kendo-data-query';\r\nimport { UserService } from '../../services/identity/user.service';\r\n\r\n@Component({\r\n    selector: 'brochure',\r\n    templateUrl: './brochure.component.html',\r\n    providers: [DataService, UserService]\r\n})\r\nexport class BrochureComponent implements OnInit {\r\n\n    public brochures: GetAllBrochuresViewModel;\n    public gridState: State = {\n        sort: [],\n        skip: 0,\n        take: 10\n    };\n    public formGroup: FormGroup;\n    private editedRowIndex: number;\r\n    private admin: boolean;\r\n\r\n    constructor(private dataService: DataService, private userService: UserService) {\r\n        this.brochures = new GetAllBrochuresViewModel();\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.loadData();\r\n        this.admin = this.userService.getIsAdmin();\r\n    }\n\n    private loadData() {\n        this.dataService.get().subscribe(data => this.brochures = data);\r\n    }\n\n    public addHandler({ sender }) {\n        this.closeEditor(sender);\n\n        this.formGroup = new FormGroup(\n            {\n                'id': new FormControl(0),\n                'name': new FormControl('', Validators.required),\n                'typeOfCover': new FormControl('', Validators.required),\n                'numberOfPages': new FormControl('', Validators.compose([Validators.required, Validators.pattern('^[0-9]{1,3}')])),\n            }\n        );\n\n        sender.addRow(this.formGroup);\n    }\n\n    public editHandler({ sender, rowIndex, dataItem }) {\n        this.closeEditor(sender);\n\n        this.formGroup = new FormGroup(\n            {\n                'id': new FormControl(dataItem.id),\n                'name': new FormControl(dataItem.name, Validators.required),\n                'typeOfCover': new FormControl(dataItem.typeOfCover, Validators.required),\n                'numberOfPages': new FormControl(dataItem.numberOfPages, Validators.compose([Validators.required, Validators.pattern('^[0-9]{1,3}')])),\n            }\n        );\n\n        this.editedRowIndex = rowIndex;\n\n        sender.editRow(rowIndex, this.formGroup);\n    }\n\n    public cancelHandler({ sender, rowIndex }) {\n        this.closeEditor(sender, rowIndex);\n    }\n\n    public saveHandler({ sender, rowIndex, formGroup, isNew }) {\n        if (isNew) {\n            const product: CreateBrochureViewModel = formGroup.value;\n            this.dataService.create(product)\r\n                .subscribe(() => this.loadData());\r\n        }\n\n        if (!isNew) {\n            const product: UpdateBrochureViewModel = formGroup.value;\n            this.dataService.update(product)\r\n                .subscribe(() => this.loadData());\r\n        }\n\n        sender.closeRow(rowIndex);\n    }\n\n    public removeHandler({ dataItem }) {\n        this.dataService.delete(dataItem.id)\n            .subscribe(() => this.loadData());\n    }\n\n    private closeEditor(grid, rowIndex = this.editedRowIndex) {\n        grid.closeRow(rowIndex);\n        this.editedRowIndex = undefined;\n        this.formGroup = undefined;\n    }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-6 new-user-alert\\\">\\r\\n    <div *ngIf=\\\"brandNew\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\r\\n      <strong>All set!</strong> Please login with your account\\r\\n    </div>\\r\\n    <h2>Login</h2>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-6\\\">\\r\\n    <form #f=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"login(f)\\\">\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"email\\\">Email</label>\\r\\n        <input id=\\\"email\\\" type=\\\"text\\\" required name=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" [ngModel]=\\\"credentials.email\\\" #email=\\\"ngModel\\\" tmFocus validateEmail>\\r\\n        <small [hidden]=\\\"email.valid || (email.pristine && !submitted)\\\" class=\\\"text-danger\\\">Please enter a valid email</small>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"password\\\">Password</label>\\r\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" required name=\\\"password\\\" placeholder=\\\"Password\\\" ngModel>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"f.invalid || isRequesting\\\">Login</button>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"errors\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n        <strong>Oops!</strong> {{errors}}\\r\\n      </div>\\r\\n\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".new-user-alert {\\n  padding-top: 2.5rem; }\\n\"","import { Subscription } from 'rxjs';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { Credentials } from '../../models/identity/interfaces/credentials.interface';\r\nimport { UserService } from '../../services/identity/user.service';\r\nimport { Local } from 'protractor/built/driverProviders';\r\nimport { LoginService } from '../../services/identity/login.service';\r\n\r\n@Component({\r\n    selector: 'app-login-form',\r\n    templateUrl: './login-form.component.html',\r\n    styleUrls: ['./login-form.component.scss']\r\n})\r\n\r\nexport class LoginFormComponent implements OnInit, OnDestroy {\r\n\r\n    private subscription: Subscription;\r\n\r\n    private brandNew: boolean;\r\n    private errors: string;\r\n    private isRequesting: boolean;\r\n    private submitted: boolean = false;\r\n    private credentials: Credentials = { email: '', password: '' };\r\n\r\n    constructor(private loginService: LoginService, private userService: UserService, private router: Router, private activatedRoute: ActivatedRoute) { }\r\n\r\n    ngOnInit() {\r\n        this.subscription = this.activatedRoute.queryParams.subscribe(\r\n            (param: any) => {\r\n                this.brandNew = param['brandNew'];\r\n                this.credentials.email = param['email'];\r\n            });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n    }\r\n\r\n    public login({ value, valid }: { value: Credentials, valid: boolean }) {\r\n        if (!valid) {\r\n            return;\r\n        }\r\n\r\n        this.submitted = true;\r\n        this.isRequesting = true;\r\n        this.errors = '';\r\n\r\n        this.loginService.login(value.email, value.password)\r\n            .subscribe(\r\n                result => {\r\n                    if (result) {\r\n                        localStorage.setItem(\"data\", result);\r\n                        this.router.navigate(['/book']);\r\n                    }\r\n                    else {\r\n                        this.router.navigate(['/login']);\r\n                    }\r\n                },\r\n                error => this.errors = error);\r\n    }\r\n}\r\n","module.exports = \"<kendo-grid [data]=\\\"magazines.magazines\\\"\\r\\n            [height]=\\\"533\\\"\\r\\n            [pageSize]=\\\"gridState.take\\\" [skip]=\\\"gridState.skip\\\" [sort]=\\\"gridState.sort\\\"\\r\\n            [pageable]=\\\"true\\\" [sortable]=\\\"true\\\"\\r\\n            (dataStateChange)=\\\"onStateChange($event)\\\"\\r\\n            (edit)=\\\"editHandler($event)\\\" (cancel)=\\\"cancelHandler($event)\\\"\\r\\n            (save)=\\\"saveHandler($event)\\\" (remove)=\\\"removeHandler($event)\\\"\\r\\n            (add)=\\\"addHandler($event)\\\"\\r\\n            [navigable]=\\\"true\\\">\\r\\n  <ng-container *ngIf=\\\"admin\\\">\\r\\n    <ng-template kendoGridToolbarTemplate>\\r\\n      <button kendoGridAddCommand>Add new</button>\\r\\n    </ng-template>\\r\\n  </ng-container>\\r\\n  <kendo-grid-column field=\\\"name\\\" title=\\\"Name\\\"></kendo-grid-column>\\r\\n  <kendo-grid-column field=\\\"number\\\" title=\\\"Number\\\"></kendo-grid-column>\\r\\n  <kendo-grid-column field=\\\"yearOfPublication\\\" title=\\\"Year Of Publication\\\"></kendo-grid-column>\\r\\n  <ng-container *ngIf=\\\"admin\\\">\\r\\n    <kendo-grid-command-column title=\\\"command\\\" width=\\\"220\\\">\\r\\n      <ng-template kendoGridCellTemplate let-isNew=\\\"isNew\\\">\\r\\n        <button kendoGridEditCommand [primary]=\\\"true\\\">Edit</button>\\r\\n        <button kendoGridRemoveCommand>Remove</button>\\r\\n        <button kendoGridSaveCommand [disabled]=\\\"formGroup?.invalid\\\">{{ isNew ? 'Add' : 'Update' }}</button>\\r\\n        <button kendoGridCancelCommand>{{ isNew ? 'Discard changes' : 'Cancel' }}</button>\\r\\n      </ng-template>\\r\\n    </kendo-grid-command-column>\\r\\n  </ng-container>\\r\\n</kendo-grid>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\nimport { DataService } from '../../services/magazine.service';\r\nimport { GetAllMagazinesViewModel } from '../../models/magazine/GetAllMagazinesViewModel';\r\nimport { CreateMagazineViewModel } from '../../models/magazine/CreateMagazineViewModel';\r\nimport { UpdateMagazineViewModel } from '../../models/magazine/UpdateMagazineViewModel';\r\n\r\nimport { GridDataResult } from '@progress/kendo-angular-grid';\nimport { State, process } from '@progress/kendo-data-query';\r\nimport { UserService } from '../../services/identity/user.service';\r\n\r\n@Component({\r\n    selector: 'magazine',\r\n    templateUrl: './magazine.component.html',\r\n    providers: [DataService, UserService]\r\n})\r\n\r\nexport class MagazineComponent implements OnInit {\r\n\n    public magazines: GetAllMagazinesViewModel;\n    public gridState: State = {\n        sort: [],\n        skip: 0,\n        take: 10\n    };\n    public formGroup: FormGroup;\n    private editedRowIndex: number;\r\n    private admin: boolean;\r\n\r\n    constructor(private dataService: DataService, private userService: UserService) {\r\n        this.magazines = new GetAllMagazinesViewModel();\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.loadData();\r\n        this.admin = this.userService.getIsAdmin();\r\n    }\n\n    private loadData() {\n        this.dataService.get().subscribe(data => this.magazines = data);\r\n    }\n\n    public addHandler({ sender }) {\n        this.closeEditor(sender);\n\n        this.formGroup = new FormGroup(\n            {\n                'id': new FormControl(0),\n                'name': new FormControl('', Validators.required),\n                'yearOfPublication': new FormControl('', Validators.compose([Validators.required, Validators.pattern('^[0-9]{4}')])),\n                'number': new FormControl('', Validators.compose([Validators.required, Validators.pattern('^[0-9]{1,3}')])),\n            }\n        );\n\n        sender.addRow(this.formGroup);\n    }\n\n    public editHandler({ sender, rowIndex, dataItem }) {\n        this.closeEditor(sender);\n\n        this.formGroup = new FormGroup(\n            {\n                'id': new FormControl(dataItem.id),\n                'name': new FormControl(dataItem.name, Validators.required),\n                'yearOfPublication': new FormControl(dataItem.yearOfPublication, Validators.compose([Validators.required, Validators.pattern('^[0-9]{4}')])),\n                'number': new FormControl(dataItem.number, Validators.compose([Validators.required, Validators.pattern('^[0-9]{1,3}')])),\n            }\n        );\n\n        this.editedRowIndex = rowIndex;\n\n        sender.editRow(rowIndex, this.formGroup);\n    }\n\n    public cancelHandler({ sender, rowIndex }) {\n        this.closeEditor(sender, rowIndex);\n    }\n\n    public saveHandler({ sender, rowIndex, formGroup, isNew }) {\n        if (isNew) {\n            const product: CreateMagazineViewModel = formGroup.value;\n            this.dataService.create(product)\r\n                .subscribe(() => this.loadData());\r\n        }\n\n        if (!isNew) {\n            const product: UpdateMagazineViewModel = formGroup.value;\n            this.dataService.update(product)\r\n                .subscribe(() => this.loadData());\r\n        }\n\n        sender.closeRow(rowIndex);\n    }\n\n    public removeHandler({ dataItem }) {\n        this.dataService.delete(dataItem.id)\n            .subscribe(() => this.loadData());\n    }\n\n    private closeEditor(grid, rowIndex = this.editedRowIndex) {\n        grid.closeRow(rowIndex);\n        this.editedRowIndex = undefined;\n        this.formGroup = undefined;\n    }\r\n}\r\n","module.exports = \"<div class='main-nav'>\\r\\n  <div class='navbar navbar-inverse'>\\r\\n    <div class='navbar-header'>\\r\\n      <button type='button' class='navbar-toggle' data-toggle='collapse' data-target='.navbar-collapse'>\\r\\n        <span class='sr-only'>Toggle navigation</span>\\r\\n        <span class='icon-bar'></span>\\r\\n        <span class='icon-bar'></span>\\r\\n        <span class='icon-bar'></span>\\r\\n      </button>\\r\\n      <a class='navbar-brand' [routerLink]=\\\"['/home']\\\">Library.WEB</a>\\r\\n    </div>\\r\\n    <div class='clearfix'></div>\\r\\n    <div class='navbar-collapse collapse'>\\r\\n      <ul class='nav navbar-nav'>\\r\\n        <li [routerLinkActive]=\\\"['link-active']\\\">\\r\\n          <a [routerLink]=\\\"['/book']\\\">\\r\\n            <span class='glyphicon glyphicon-education'></span> Books\\r\\n          </a>\\r\\n        </li>\\r\\n        <li [routerLinkActive]=\\\"['link-active']\\\">\\r\\n          <a [routerLink]=\\\"['/magazine']\\\">\\r\\n            <span class='glyphicon glyphicon-education'></span> Magazines\\r\\n          </a>\\r\\n        </li>\\r\\n        <li [routerLinkActive]=\\\"['link-active']\\\">\\r\\n          <a [routerLink]=\\\"['/brochure']\\\">\\r\\n            <span class='glyphicon glyphicon-education'></span> Brochures\\r\\n          </a>\\r\\n        </li>\\r\\n        <li [routerLinkActive]=\\\"['link-active']\\\">\\r\\n          <a [routerLink]=\\\"['/author']\\\">\\r\\n            <span class='glyphicon glyphicon-education'></span> Authors\\r\\n          </a>\\r\\n        </li>\\r\\n        <li [routerLinkActive]=\\\"['link-active']\\\">\\r\\n          <a [routerLink]=\\\"['/publicationHouse']\\\">\\r\\n            <span class='glyphicon glyphicon-education'></span> PublicationHouses\\r\\n          </a>\\r\\n        </li>\\r\\n        <li [routerLinkActive]=\\\"['link-active']\\\">\\r\\n          <a [routerLink]=\\\"['/user']\\\">\\r\\n            <span class='glyphicon glyphicon-king'></span> User\\r\\n          </a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"li .glyphicon {\\n  margin-right: 10px; }\\n\\nli.link-active a,\\nli.link-active a:hover,\\nli.link-active a:focus {\\n  background-color: #4189C7;\\n  color: white; }\\n\\n.main-nav {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  z-index: 1; }\\n\\n@media (min-width: 768px) {\\n  .main-nav {\\n    height: 100%;\\n    width: calc(25% - 20px); }\\n  .navbar {\\n    border-radius: 0px;\\n    border-width: 0px;\\n    height: 100%; }\\n  .navbar-header {\\n    float: none; }\\n  .navbar-collapse {\\n    border-top: 1px solid #444;\\n    padding: 0px; }\\n  .navbar ul {\\n    float: none; }\\n  .navbar li {\\n    float: none;\\n    font-size: 15px;\\n    margin: 6px; }\\n  .navbar li a {\\n    padding: 10px 16px;\\n    border-radius: 4px; }\\n  .navbar a {\\n    width: 100%;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis; } }\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'nav-menu',\r\n    templateUrl: './navmenu.component.html',\r\n    styleUrls: ['./navmenu.component.scss']\r\n})\r\nexport class NavMenuComponent {\r\n}\r\n","module.exports = \"<kendo-grid [data]=\\\"publicationHouses.publicationHouses\\\"\\r\\n            [height]=\\\"533\\\"\\r\\n            [pageSize]=\\\"gridState.take\\\" [skip]=\\\"gridState.skip\\\" [sort]=\\\"gridState.sort\\\"\\r\\n            [pageable]=\\\"true\\\" [sortable]=\\\"true\\\"\\r\\n            (dataStateChange)=\\\"onStateChange($event)\\\"\\r\\n            (edit)=\\\"editHandler($event)\\\" (cancel)=\\\"cancelHandler($event)\\\"\\r\\n            (save)=\\\"saveHandler($event)\\\" (remove)=\\\"removeHandler($event)\\\"\\r\\n            (add)=\\\"addHandler($event)\\\"\\r\\n            [navigable]=\\\"true\\\">\\r\\n  <ng-container *ngIf=\\\"admin\\\">\\r\\n    <ng-template kendoGridToolbarTemplate>\\r\\n      <button kendoGridAddCommand>Add new</button>\\r\\n    </ng-template>\\r\\n  </ng-container>\\r\\n  <kendo-grid-column field=\\\"name\\\" title=\\\"Name\\\"></kendo-grid-column>\\r\\n  <kendo-grid-column field=\\\"adress\\\" title=\\\"Adress\\\"></kendo-grid-column>\\r\\n  <ng-container *ngIf=\\\"admin\\\">\\r\\n    <kendo-grid-command-column title=\\\"command\\\" width=\\\"220\\\">\\r\\n      <ng-template kendoGridCellTemplate let-isNew=\\\"isNew\\\">\\r\\n        <button kendoGridEditCommand [primary]=\\\"true\\\">Edit</button>\\r\\n        <button kendoGridRemoveCommand>Remove</button>\\r\\n        <button kendoGridSaveCommand [disabled]=\\\"formGroup?.invalid\\\">{{ isNew ? 'Add' : 'Update' }}</button>\\r\\n        <button kendoGridCancelCommand>{{ isNew ? 'Discard changes' : 'Cancel' }}</button>\\r\\n      </ng-template>\\r\\n    </kendo-grid-command-column>\\r\\n  </ng-container>\\r\\n</kendo-grid>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\nimport { PublicationHouseService } from '../../services/publicationHouse.service';\r\nimport { CreatePublicationHouseViewModel } from '../../models/publicationHouse/CreatePublicationHouseViewModel';\r\nimport { UpdatePublicationHouseViewModel } from '../../models/publicationHouse/UpdatePublicationHouseViewModel';\r\nimport { GetAllPublicationHousesViewModel } from '../../models/publicationHouse/GetAllPublicationHousesViewModel';\r\n\r\nimport { GridDataResult } from '@progress/kendo-angular-grid';\nimport { State, process } from '@progress/kendo-data-query';\r\nimport { UserService } from '../../services/identity/user.service';\r\n\r\n@Component({\r\n    selector: 'publicationHouse',\r\n    templateUrl: './publicationHouse.component.html',\r\n    providers: [PublicationHouseService, UserService]\r\n})\r\nexport class PublicationHouseComponent implements OnInit {\r\n\r\n    public publicationHouses: GetAllPublicationHousesViewModel;\n    public gridState: State = {\n        sort: [],\n        skip: 0,\n        take: 10\n    };\n    public formGroup: FormGroup;\n    private editedRowIndex: number;\r\n    private admin: boolean;\r\n\r\n    constructor(private dataService: PublicationHouseService, private userService: UserService) {\r\n        this.publicationHouses = new GetAllPublicationHousesViewModel();\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.loadData();\r\n        this.admin = this.userService.getIsAdmin();\r\n    }\n\n    private loadData() {\n        this.dataService.get().subscribe(data => this.publicationHouses = data);\r\n    }\n\n    public addHandler({ sender }) {\n        this.closeEditor(sender);\n\n        this.formGroup = new FormGroup(\n            {\n                'id': new FormControl(0),\n                'name': new FormControl('', Validators.required),\n                'adress': new FormControl('', Validators.required)\n            }\n        );\n\n        sender.addRow(this.formGroup);\n    }\n\n    public editHandler({ sender, rowIndex, dataItem }) {\n        this.closeEditor(sender);\n\n        this.formGroup = new FormGroup(\n            {\n                'id': new FormControl(dataItem.id),\n                'name': new FormControl(dataItem.name, Validators.required),\n                'adress': new FormControl(dataItem.adress, Validators.required)\n            }\n        );\n\n        this.editedRowIndex = rowIndex;\n\n        sender.editRow(rowIndex, this.formGroup);\n    }\n\n    public cancelHandler({ sender, rowIndex }) {\n        this.closeEditor(sender, rowIndex);\n    }\n\n    public saveHandler({ sender, rowIndex, formGroup, isNew }) {\n        if (isNew) {\n            const product: CreatePublicationHouseViewModel = formGroup.value;\n            this.dataService.create(product)\r\n                .subscribe(() => this.loadData());\r\n        }\n\n        if (!isNew) {\n            const product: UpdatePublicationHouseViewModel = formGroup.value;\n            this.dataService.update(product)\r\n                .subscribe(() => this.loadData());\r\n        }\n\n        sender.closeRow(rowIndex);\n    }\n\n    public removeHandler({ dataItem }) {\n        this.dataService.delete(dataItem.id)\n            .subscribe(() => this.loadData());\n    }\n\n    private closeEditor(grid, rowIndex = this.editedRowIndex) {\n        grid.closeRow(rowIndex);\n        this.editedRowIndex = undefined;\n        this.formGroup = undefined;\n    }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-6\\\">\\r\\n    <h2>Please enter your information</h2>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-6\\\">\\r\\n    <form #f=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"registerUser(f)\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"first-name\\\">First name</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"first-name\\\" placeholder=\\\"First name\\\" name=\\\"firstName\\\" tmFocus ngModel>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"last-name\\\">Last name</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"last-name\\\" placeholder=\\\"Last name\\\" name=\\\"lastName\\\" ngModel>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"email\\\">Email</label>\\r\\n        <input id=\\\"email\\\" type=\\\"text\\\" required name=\\\"email\\\" validateEmail class=\\\"form-control\\\" placeholder=\\\"Email\\\" ngModel #email=\\\"ngModel\\\">\\r\\n        <small [hidden]=\\\"email.valid || (email.pristine && !submitted)\\\" class=\\\"text-danger\\\">Please enter a valid email</small>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"password\\\">Password</label>\\r\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" ngModel>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"f.invalid || isRequesting\\\">Sign Up</button>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"errors\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n        <strong>Oops!</strong> {{errors}}\\r\\n      </div>\\r\\n\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { UserRegistration } from '../../models/identity/interfaces/user.registration.interface';\r\nimport { UserService } from '../../services/identity/user.service';\r\nimport { LoginService } from '../../services/identity/login.service';\r\n\r\n@Component({\r\n    selector: 'app-registration-form',\r\n    templateUrl: './registration-form.component.html',\r\n})\r\nexport class RegistrationFormComponent implements OnInit {\r\n\r\n    private errors: string;\r\n    private isRequesting: boolean;\r\n    private submitted: boolean = false;\r\n\r\n    constructor(private router: Router, private loginService: LoginService) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    public registerUser({ value, valid }: { value: UserRegistration, valid: boolean }) {\r\n        if (!valid) {\r\n            return;\r\n        }\r\n\r\n        this.submitted = true;\r\n        this.isRequesting = true;\r\n        this.errors = '';\r\n\r\n        this.loginService.register(value.email, value.password, value.firstName, value.lastName)\r\n            .finally(() => this.isRequesting = false)\r\n            .subscribe(\r\n                result => {\r\n                    if (result) {\r\n                        this.router.navigate(['/login'], { queryParams: { brandNew: true, email: value.email } });\r\n                    }\r\n                },\r\n                errors => this.errors = errors);\r\n        \r\n    }\r\n}\r\n","module.exports = \"<header>\\r\\n  <nav class=\\\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\\\">\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\">\\r\\n\\r\\n      <ul *ngIf=\\\"status\\\" class=\\\"nav navbar-nav\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\" routerLink=\\\"/user\\\">Logoff</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n\\r\\n      <ul *ngIf=\\\"!status\\\" class=\\\"nav navbar-nav\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/register\\\">Email signup</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/login\\\">Email login</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-6 col-sm-3\\\">\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../services/identity/user.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'user',\r\n    templateUrl: './user.component.html',\r\n    providers: [UserService]\r\n})\r\n\r\nexport class UserComponent implements OnInit {\r\n    status: boolean;\r\n\r\n    constructor(private userService: UserService, private router: Router) {\r\n    }\r\n\r\n    logout() {\r\n        this.userService.logout();\r\n        this.router.navigate(['/login']);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.status = this.userService.getIsLoggedIn();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n    }\n}\n","import { GetAuthorViewModel } from \"./GetAuthorViewModel\";\r\n\r\nexport class GetAllAuthorsViewModel {\r\n    constructor() {\r\n        this.authors = new Array<GetAuthorViewModel>()\r\n    }\r\n    public authors: GetAuthorViewModel[];\r\n}\r\n","import { GetBookViewModel } from \"./GetBookViewModel\";\r\n\r\nexport class GetAllBooksViewModel {\r\n    constructor() {\r\n        this.books = new Array<GetBookViewModel>();\r\n    }\r\n    public books: GetBookViewModel[];\r\n}\r\n","import { GetBrochureViewModel } from \"./GetBrochureViewModel\";\r\n\r\nexport class GetAllBrochuresViewModel {\r\n    constructor() {\r\n        this.brochures = new Array<GetBrochureViewModel>();\r\n    }\r\n    public brochures: GetBrochureViewModel[]\r\n}\r\n","export class User {\r\n    constructor(\r\n        public userName: string,\r\n        public password: string) { }\r\n}\r\n","export class UserRegistration {\r\n    constructor(\r\n        public email: string,\r\n        public password: string,\r\n        public firstName: string,\r\n        public lastName: string) { }\r\n}\r\n","import { GetMagazineViewModel } from \"./GetMagazineViewModel\";\r\n\r\nexport class GetAllMagazinesViewModel {\r\n    constructor() {\r\n        this.magazines = new Array<GetMagazineViewModel>();\r\n    }\r\n    public magazines: GetMagazineViewModel[];\r\n}\r\n","import { GetPublicationHouseViewModel } from \"./GetPublicationHouseViewModel\";\r\n\r\nexport class GetAllPublicationHousesViewModel {\r\n    constructor() {\r\n        this.publicationHouses = new Array<GetPublicationHouseViewModel>();\r\n    }\r\n    public publicationHouses: GetPublicationHouseViewModel[];\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { GetAllAuthorsViewModel } from '../models/author/GetAllAuthorsViewModel';\r\nimport { CreateAuthorViewModel } from '../models/author/CreateAuthorViewModel';\r\nimport { UpdateAuthorViewModel } from '../models/author/UpdateAuthorViewModel';\r\n\n@Injectable()\nexport class AuthorService {\n\n    private url: string = \"/api/Author\";\n\n    constructor(private http: HttpClient) { }\n\n    public get() {\n        return this.http.get<GetAllAuthorsViewModel>(this.url);\r\n    }\n\n    public create(item: CreateAuthorViewModel) {\r\n        return this.http.post(this.url, item)\r\n    }\r\n\r\n    public update(item: UpdateAuthorViewModel) {\r\n        return this.http.put(this.url, item)\r\n    }\r\n\r\n    public delete(id?: number) {\r\n        return this.http.delete(`${this.url}/${id}`);\r\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { GetAllBooksViewModel } from '../models/book/GetAllBooksViewModel';\r\nimport { CreateBookViewModel } from '../models/book/CreateBookViewModel';\r\nimport { UpdateBookViewModel } from '../models/book/UpdateBookViewModel';\r\n\r\n@Injectable()\r\nexport class BookService {\r\n\r\n    private url: string = \"/api/Book\";\n\n    constructor(private http: HttpClient) { }\n\n    public get() {\n        return this.http.get<GetAllBooksViewModel>(this.url);\r\n    }\n\n    public create(item: CreateBookViewModel) {\r\n        return this.http.post(this.url, item)\r\n    }\r\n\r\n    public update(item: UpdateBookViewModel) {\r\n        return this.http.put(this.url, item)\r\n    }\r\n\r\n    public delete(id?: number) {\r\n        return this.http.delete(`${this.url}/${id}`);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\r\nimport { CreateBrochureViewModel } from '../models/brochure/CreateBrochureViewModel';\r\nimport { UpdateBrochureViewModel } from '../models/brochure/UpdateBrochureViewModel';\r\nimport { GetAllBrochuresViewModel } from '../models/brochure/GetAllBrochuresViewModel';\r\n\n@Injectable()\nexport class DataService {\n\n    private url: string = \"/api/Brochure\";\n\n    constructor(private http: HttpClient) { }\n\n    public get() {\n        return this.http.get<GetAllBrochuresViewModel>(this.url);\r\n    }\n\n    public create(item: CreateBrochureViewModel) {\r\n        return this.http.post(this.url, item)\r\n    }\r\n\r\n    public update(item: UpdateBrochureViewModel) {\r\n        return this.http.put(this.url, item)\r\n    }\r\n\r\n    public delete(id?: number) {\r\n        return this.http.delete(`${this.url}/${id}`);\r\n    }\n}\n","import { Observable } from 'rxjs/Rx';\r\n\r\nexport abstract class BaseService {\r\n\r\n    constructor() { }\r\n\r\n    protected handleError(error: any) {\r\n        var applicationError = error.headers.get('Application-Error');\r\n\r\n        if (applicationError) {\r\n            return Observable.throw(applicationError);\r\n        }\r\n\r\n        var modelStateErrors: string = '';\r\n        var serverError = error.json();\r\n\r\n        if (!serverError.type) {\r\n            for (var key in serverError) {\r\n                if (serverError[key]) {\r\n                    modelStateErrors += serverError[key] + '\\n';\r\n                }\r\n            }\r\n        }\r\n\r\n        modelStateErrors = modelStateErrors = '' ? null : modelStateErrors;\r\n        return Observable.throw(modelStateErrors || 'Server error');\r\n    }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { User } from \"../../models/identity/user\";\r\nimport { BaseService } from \"./base.service\";\r\nimport { UserRegistration } from \"../../models/identity/userRegistration\";\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from \"./user.service\";\r\n\r\n\r\n@Injectable()\r\nexport class LoginService extends BaseService {\r\n\r\n    constructor(private http: HttpClient) {\r\n        super();\r\n    }\r\n\r\n    public register(email: string, password: string, firstName: string, lastName: string) {\r\n        let user = new UserRegistration(email, password, firstName, lastName);\r\n        return this.http.post('api/Account/Register', user)\r\n            .map(res => true)\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    public login(userName, password): Observable<any> {\r\n        let user = new User(userName, password);\r\n        return this.http.post('api/Account/Login', user, { responseType: 'text' })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    public logout() {\r\n        localStorage.removeItem(\"data\");\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LoginService } from './login.service';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n    private isLoggedIn: boolean = false;\r\n    private isAdmin: boolean = false;\r\n\r\n    constructor(private loginService: LoginService) {\r\n        this.isLoggedIn = !!localStorage.getItem(\"data\");\r\n        this.getIsAdminFromLocalStorage();\r\n    }\r\n\r\n    public logout() {\r\n        this.loginService.logout();\r\n        this.isLoggedIn = false;\r\n    }\r\n\r\n    public getIsLoggedIn() {\r\n        return this.isLoggedIn;\r\n    }\r\n\r\n    public getIsAdmin() {\r\n        return this.isAdmin;\r\n    }\r\n\r\n    public changeRole(role: boolean) {\r\n        this.isAdmin = role;\r\n    }\r\n\r\n    public getIsAdminFromLocalStorage() {\r\n        if (localStorage.getItem(\"data\")) {\r\n            this.changeRole(!!(JSON.parse(localStorage.getItem(\"data\")).role == \"admin\"));\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { GetAllMagazinesViewModel } from '../models/magazine/GetAllMagazinesViewModel';\r\nimport { CreateMagazineViewModel } from '../models/magazine/CreateMagazineViewModel';\r\nimport { UpdateMagazineViewModel } from '../models/magazine/UpdateMagazineViewModel';\r\n\n@Injectable()\nexport class DataService {\n\n    private url: string = \"/api/Magazine\";\n\n    constructor(private http: HttpClient) { }\n\n    public get() {\n        return this.http.get<GetAllMagazinesViewModel>(this.url);\r\n    }\n\n    public create(item: CreateMagazineViewModel) {\r\n        return this.http.post(this.url, item)\r\n    }\r\n\r\n    public update(item: UpdateMagazineViewModel) {\r\n        return this.http.put(this.url, item)\r\n    }\r\n\r\n    public delete(id?: number) {\r\n        return this.http.delete(`${this.url}/${id}`);\r\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { GetAllPublicationHousesViewModel } from '../models/publicationHouse/GetAllPublicationHousesViewModel';\r\nimport { CreatePublicationHouseViewModel } from '../models/publicationHouse/CreatePublicationHouseViewModel';\r\nimport { UpdatePublicationHouseViewModel } from '../models/publicationHouse/UpdatePublicationHouseViewModel';\r\n\r\n@Injectable()\r\nexport class PublicationHouseService {\r\n\r\n    private url = \"/api/PublicationHouse\";\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public get() {\n        return this.http.get<GetAllPublicationHousesViewModel>(this.url);\r\n    }\n\n    public create(item: CreatePublicationHouseViewModel) {\r\n        return this.http.post(this.url, item)\r\n    }\r\n\r\n    public update(item: UpdatePublicationHouseViewModel) {\r\n        return this.http.put(this.url, item)\r\n    }\r\n\r\n    public delete(id?: number) {\r\n        return this.http.delete(`${this.url}/${id}`);\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}