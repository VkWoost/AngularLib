{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/AppHttpInterceptor.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/author/author.component.html","webpack:///./src/app/components/author/author.component.ts","webpack:///./src/app/components/book/book.component.html","webpack:///./src/app/components/book/book.component.ts","webpack:///./src/app/components/brochure/brochure.component.html","webpack:///./src/app/components/brochure/brochure.component.ts","webpack:///./src/app/components/login-form/login-form.component.html","webpack:///./src/app/components/login-form/login-form.component.scss","webpack:///./src/app/components/login-form/login-form.component.ts","webpack:///./src/app/components/magazine/magazine.component.html","webpack:///./src/app/components/magazine/magazine.component.ts","webpack:///./src/app/components/navmenu/navmenu.component.css","webpack:///./src/app/components/navmenu/navmenu.component.html","webpack:///./src/app/components/navmenu/navmenu.component.ts","webpack:///./src/app/components/publicationHouse/publicationHouse.component.html","webpack:///./src/app/components/publicationHouse/publicationHouse.component.ts","webpack:///./src/app/components/registration-form/registration-form.component.html","webpack:///./src/app/components/registration-form/registration-form.component.ts","webpack:///./src/app/components/user/user.component.html","webpack:///./src/app/components/user/user.component.ts","webpack:///./src/app/models/author/allAuthors.ts","webpack:///./src/app/models/book/allBooks.ts","webpack:///./src/app/models/brochure/allBrochures.ts","webpack:///./src/app/models/identity/user.ts","webpack:///./src/app/models/identity/userRegistration.ts","webpack:///./src/app/models/magazine/allMagazines.ts","webpack:///./src/app/models/publicationHouse/allPublicationHouses.ts","webpack:///./src/app/services/author.service.ts","webpack:///./src/app/services/book.service.ts","webpack:///./src/app/services/brochure.service.ts","webpack:///./src/app/services/identity/base.service.ts","webpack:///./src/app/services/identity/user.service.ts","webpack:///./src/app/services/magazine.service.ts","webpack:///./src/app/services/publicationHouse.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from \"@angular/core\";\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpErrorResponse, HttpResponse } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\n@Injectable()\r\nexport class AppHttpInterceptor implements HttpInterceptor {\r\n  constructor() {\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const token: string = localStorage.getItem(\"loginData\");\r\n    if (token) {\r\n      req = req.clone({ headers: req.headers.set('Authorization', 'Bearer ' + token) });\r\n    } \r\n    console.log(req);\r\n    return next.handle(req)\r\n      .map(resp => {\r\n        // on Response \r\n        if(resp  instanceof  HttpResponse ){\r\n      // Do whatever you want with the response. \r\n          return resp;\r\n        }\r\n      })\r\n      .catch(err => {\r\n    // onError \r\n        console.log(err);\r\n        if(err  instanceof  HttpErrorResponse ) {\r\n          console.log(err.status);\r\n          console.log(err.statusText);\r\n          if (err.status === 401) {\r\n      // redirect the user to login page \r\n      // 401 unauthorised user \r\n    }\r\n  } \r\n   return Observable.of(err); \r\n      });\r\n  }\r\n} \r\n","module.exports = \" @media (max-width: 767px) {\\r\\n  /* On small screens, the nav menu spans the full width of the screen. Leave a space for it. */\\r\\n  .body-content {\\r\\n    padding-top: 50px;\\r\\n  }\\r\\n}\\r\\n\"","module.exports = \"<div class='container-fluid'>\\r\\n  <div class='row'>\\r\\n    <div class='col-sm-3'>\\r\\n      <nav-menu></nav-menu>\\r\\n    </div>\\r\\n    <div class='col-sm-9 body-content'>\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'; \r\nimport { RouterModule } from '@angular/router';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './components/navmenu/navmenu.component';\r\nimport { AuthorComponent } from './components/author/author.component';\r\nimport { MagazineComponent } from './components/magazine/magazine.component';\r\nimport { BrochureComponent } from './components/brochure/brochure.component';\r\nimport { PublicationHouseComponent } from './components/publicationHouse/publicationHouse.component';\r\nimport { BookComponent } from './components/book/book.component';\r\n\r\nimport { GridModule } from '@progress/kendo-angular-grid';\nimport { DropDownsModule } from '@progress/kendo-angular-dropdowns';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\r\nimport { RegistrationFormComponent } from './components/registration-form/registration-form.component';\r\nimport { UserService } from './services/identity/user.service';\r\nimport { LoginFormComponent } from \"./components/login-form/login-form.component\";\r\nimport { UserComponent } from \"./components/user/user.component\";\r\nimport { AppHttpInterceptor } from \"./AppHttpInterceptor\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    AuthorComponent,\r\n    MagazineComponent,\r\n    BrochureComponent,\r\n    PublicationHouseComponent,\r\n    BookComponent,\r\n    UserComponent,\r\n    RegistrationFormComponent,\r\n    LoginFormComponent,\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    RouterModule\r\n    .forRoot([\r\n      { path: '', redirectTo: 'book', pathMatch: 'full' },\r\n      { path: 'author', component: AuthorComponent },\r\n      { path: \"magazine\", component: MagazineComponent },\r\n      { path: 'brochure', component: BrochureComponent },\r\n      { path: 'publicationHouse', component: PublicationHouseComponent },\r\n      { path: 'book', component: BookComponent },\r\n      { path: 'register', component: RegistrationFormComponent },\r\n      { path: 'login', component: LoginFormComponent },\r\n      { path: 'user', component: UserComponent },\r\n      { path: '**', redirectTo: '' }\r\n      ])\r\n    ,\r\n    GridModule,\r\n    DropDownsModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n  providers: [\r\n    UserService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AppHttpInterceptor,\r\n      multi: true\r\n    } \r\n  ],\r\n  bootstrap:[AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<kendo-grid [data]=\\\"authors.authors\\\"\\r\\n            [height]=\\\"533\\\"\\r\\n            [pageSize]=\\\"gridState.take\\\" [skip]=\\\"gridState.skip\\\" [sort]=\\\"gridState.sort\\\"\\r\\n            [pageable]=\\\"true\\\" [sortable]=\\\"true\\\"\\r\\n            (dataStateChange)=\\\"onStateChange($event)\\\"\\r\\n            (edit)=\\\"editHandler($event)\\\" (cancel)=\\\"cancelHandler($event)\\\"\\r\\n            (save)=\\\"saveHandler($event)\\\" (remove)=\\\"removeHandler($event)\\\"\\r\\n            (add)=\\\"addHandler($event)\\\"\\r\\n            [navigable]=\\\"true\\\">\\r\\n  <ng-template kendoGridToolbarTemplate>\\r\\n    <button kendoGridAddCommand>Add new</button>\\r\\n  </ng-template>\\r\\n  <kendo-grid-column field=\\\"name\\\" title=\\\"Name\\\"></kendo-grid-column>\\r\\n  <kendo-grid-command-column title=\\\"command\\\" width=\\\"220\\\">\\r\\n    <ng-template kendoGridCellTemplate let-isNew=\\\"isNew\\\">\\r\\n      <button kendoGridEditCommand [primary]=\\\"true\\\">Edit</button>\\r\\n      <button kendoGridRemoveCommand>Remove</button>\\r\\n      <button kendoGridSaveCommand [disabled]=\\\"formGroup?.invalid\\\">{{ isNew ? 'Add' : 'Update' }}</button>\\r\\n      <button kendoGridCancelCommand>{{ isNew ? 'Discard changes' : 'Cancel' }}</button>\\r\\n    </ng-template>\\r\\n  </kendo-grid-command-column>\\r\\n</kendo-grid>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\nimport { AuthorService } from '../../services/author.service';\r\nimport { AllAuthors } from '../../models/author/allAuthors';\r\nimport { AuthorCreateView } from '../../models/author/authorCreateView';\r\nimport { AuthorUpdateView } from '../../models/author/authorUpdateView';\r\n\r\nimport { GridDataResult } from '@progress/kendo-angular-grid';\nimport { State, process } from '@progress/kendo-data-query';\r\nimport { UserService } from '../../services/identity/user.service';\r\n\r\n@Component({\r\n  selector: 'auhtor',\r\n  templateUrl: './author.component.html',\r\n  providers: [AuthorService, UserService]\r\n})\r\n\r\nexport class AuthorComponent implements OnInit {\r\n\n  public authors: AllAuthors;\n  public gridState: State = {\n    sort: [],\n    skip: 0,\n    take: 10\n  };\n  public formGroup: FormGroup;\n  private editedRowIndex: number;\r\n\r\n  constructor(private dataService: AuthorService) {\r\n    this.authors = new AllAuthors();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.loadData();\r\n  }\n\n  private loadData() {\n    this.dataService.get().subscribe(data => this.authors = data);\r\n  }\n\n  public addHandler({ sender }) {\n    this.closeEditor(sender);\n\n    this.formGroup = new FormGroup(\n      {\n        'id': new FormControl(0),\n        'name': new FormControl('', Validators.required),\n      }\n    );\n\n    sender.addRow(this.formGroup);\n  }\n\n  public editHandler({ sender, rowIndex, dataItem }) {\n    this.closeEditor(sender);\n\n    this.formGroup = new FormGroup(\n      {\n        'id': new FormControl(dataItem.id),\n        'name': new FormControl(dataItem.name, Validators.required),\n      }\n    );\n\n    this.editedRowIndex = rowIndex;\n\n    sender.editRow(rowIndex, this.formGroup);\n  }\n\n  public cancelHandler({ sender, rowIndex }) {\n    this.closeEditor(sender, rowIndex);\n  }\n\n  public saveHandler({ sender, rowIndex, formGroup, isNew }) {\n    if (isNew) {\n      const product: AuthorCreateView = formGroup.value;\n      this.dataService.create(product)\r\n        .subscribe(() => this.loadData());\r\n    }\n    if (!isNew) {\n      const product: AuthorUpdateView = formGroup.value;\n      this.dataService.update(product)\r\n        .subscribe(() => this.loadData());\r\n    }\n    sender.closeRow(rowIndex);\n  }\n\n  public removeHandler({ dataItem }) {\n    this.dataService.delete(dataItem.id)\n      .subscribe(() => this.loadData());\n  }\n\n  private closeEditor(grid, rowIndex = this.editedRowIndex) {\n    grid.closeRow(rowIndex);\n    this.editedRowIndex = undefined;\n    this.formGroup = undefined;\n  }\r\n}\r\n","module.exports = \"<kendo-grid [data]=\\\"books.books\\\"\\r\\n            [height]=\\\"533\\\"\\r\\n            [pageSize]=\\\"gridState.take\\\" [skip]=\\\"gridState.skip\\\" [sort]=\\\"gridState.sort\\\"\\r\\n            [pageable]=\\\"true\\\" [sortable]=\\\"true\\\"\\r\\n            (dataStateChange)=\\\"onStateChange($event)\\\"\\r\\n            (edit)=\\\"editHandler($event)\\\" (cancel)=\\\"cancelHandler($event)\\\"\\r\\n            (save)=\\\"saveHandler($event)\\\" (remove)=\\\"removeHandler($event)\\\"\\r\\n            (add)=\\\"addHandler($event)\\\"\\r\\n            [navigable]=\\\"true\\\">\\r\\n  <ng-template kendoGridToolbarTemplate>\\r\\n    <button kendoGridAddCommand>Add new</button>\\r\\n  </ng-template>\\r\\n  <kendo-grid-column field=\\\"name\\\" title=\\\"Name\\\"></kendo-grid-column>\\r\\n  <kendo-grid-column field=\\\"author.name\\\" title=\\\"Author\\\">\\r\\n    <ng-template kendoGridEditTemplate let-dataItem=\\\"dataItem\\\" >\\r\\n      <kendo-dropdownlist\\r\\n        name=\\\"dataItem.author\\\"\\r\\n        [data]=\\\"authors.authors\\\"\\r\\n                         textField=\\\"name\\\"\\r\\n                          valueField=\\\"id\\\"\\r\\n                          [(ngModel)]=\\\"dataItem.author\\\"\\r\\n                          (valueChange)=\\\"authorChange($event)\\\">\\r\\n      </kendo-dropdownlist>\\r\\n    </ng-template>\\r\\n  </kendo-grid-column>\\r\\n  <kendo-grid-column field=\\\"yearOfPublication\\\" title=\\\"Year Of Publication\\\"></kendo-grid-column>\\r\\n  <kendo-grid-column field=\\\"publicationHouses\\\" title=\\\"Publication Houses\\\">\\r\\n    <ng-template kendoGridCellTemplate let-dataItem=\\\"dataItem\\\">\\r\\n\\r\\n      <span *ngFor=\\\"let publicationHouse of dataItem.publicationHouses\\\">{{publicationHouse.name}}, </span>\\r\\n\\r\\n    </ng-template>\\r\\n    <ng-template kendoGridEditTemplate let-dataItem=\\\"dataItem\\\">\\r\\n      <kendo-multiselect\\r\\n        name=\\\"dataItem.publicationHouses\\\"\\r\\n        [data]=\\\"publicationHouses.publicationHouses\\\"\\r\\n        textField=\\\"name\\\"\\r\\n        valueField=\\\"id\\\"\\r\\n        [(ngModel)]=\\\"dataItem.publicationHouses\\\"\\r\\n        (valueChange)=\\\"publicationHousesChange($event)\\\">\\r\\n      </kendo-multiselect>\\r\\n    </ng-template>\\r\\n  </kendo-grid-column>\\r\\n  <kendo-grid-command-column title=\\\"command\\\" width=\\\"220\\\">\\r\\n    <ng-template kendoGridCellTemplate let-isNew=\\\"isNew\\\">\\r\\n      <button kendoGridEditCommand [primary]=\\\"true\\\">Edit</button>\\r\\n      <button kendoGridRemoveCommand>Remove</button>\\r\\n      <button kendoGridSaveCommand [disabled]=\\\"formGroup?.invalid\\\">{{ isNew ? 'Add' : 'Update' }}</button>\\r\\n      <button kendoGridCancelCommand>{{ isNew ? 'Discard changes' : 'Cancel' }}</button>\\r\\n    </ng-template>\\r\\n  </kendo-grid-command-column>\\r\\n</kendo-grid>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\nimport { BookService } from '../../services/book.service';\r\nimport { AuthorService } from '../../services/author.service';\r\nimport { PublicationHouseService } from '../../services/publicationHouse.service';\r\n\r\nimport { AllPublicationHouses } from '../../models/publicationHouse/allPublicationHouses';\r\nimport { AllBooks } from '../../models/book/allBooks';\r\nimport { AllAuthors } from '../../models/author/allAuthors';\r\nimport { BookUpdateView } from '../../models/book/bookUpdateView';\r\nimport { BookCreateView } from '../../models/book/bookCreateView';\r\n\r\nimport { GridDataResult } from '@progress/kendo-angular-grid';\r\nimport { State, process } from '@progress/kendo-data-query';\r\nimport { DropDownsModule } from '@progress/kendo-angular-dropdowns';\r\n\r\n@Component({\r\n  selector: 'book',\r\n  templateUrl: './book.component.html',\r\n  providers: [BookService, AuthorService, PublicationHouseService]\r\n})\r\nexport class BookComponent implements OnInit {\r\n\r\n  public books: AllBooks;\r\n  public authors: AllAuthors;\r\n  public publicationHouses: AllPublicationHouses;\r\n  public gridState: State = {\r\n    sort: [],\r\n    skip: 0,\r\n    take: 10\r\n  };\r\n  public formGroup: FormGroup;\r\n  private editedRowIndex: number;\r\n\r\n  constructor(private dataService: BookService, private authorService: AuthorService, private publicationHouseSevice: PublicationHouseService) {\r\n    this.books = new AllBooks();\r\n    this.authors = new AllAuthors();\r\n    this.publicationHouses = new AllPublicationHouses();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.loadData();\r\n    this.authorService.get().subscribe(data => this.authors = data);\r\n    this.publicationHouseSevice.get().subscribe(data => this.publicationHouses = data);\r\n  }\r\n\r\n  private loadData() {\r\n    this.dataService.get().subscribe(data => {\r\n\r\n      this.books = data\r\n    }\r\n    );\r\n  }\r\n\r\n  public addHandler({ sender }) {\r\n    this.closeEditor(sender);\r\n\r\n    this.formGroup = new FormGroup(\r\n      {\r\n        'id': new FormControl(0),\r\n        'name': new FormControl('', Validators.required),\r\n        'yearOfPublication': new FormControl('', Validators.compose([Validators.required, Validators.pattern('^[0-9]{4}')])),\r\n        'author': new FormControl(''),\r\n        'publicationHouses': new FormControl('')\r\n      }\r\n    );\r\n\r\n    sender.addRow(this.formGroup);\r\n  }\r\n\r\n  public editHandler({ sender, rowIndex, dataItem }) {\r\n    this.closeEditor(sender);\r\n\r\n    this.formGroup = new FormGroup(\r\n      {\r\n        'id': new FormControl(dataItem.id),\r\n        'name': new FormControl(dataItem.name, Validators.required),\r\n        'yearOfPublication': new FormControl(dataItem.yearOfPublication, Validators.compose([Validators.required, Validators.pattern('^[0-9]{4}')])),\r\n        'author': new FormControl(dataItem.author),\r\n        'publicationHouses': new FormControl(dataItem.publicationHouses)\r\n      }\r\n    );\r\n\r\n    this.editedRowIndex = rowIndex;\r\n\r\n    sender.editRow(rowIndex, this.formGroup);\r\n  }\r\n\r\n  public cancelHandler({ sender, rowIndex }) {\r\n    this.closeEditor(sender, rowIndex);\r\n  }\r\n\r\n  public saveHandler({ sender, rowIndex, formGroup, isNew }) {\r\n    if (isNew) {\r\n      const product: BookCreateView = formGroup.value;\r\n      this.dataService.create(product)\r\n        .subscribe(() => this.loadData());\r\n    }\r\n    if (!isNew) {\r\n      const product: BookUpdateView = formGroup.value;\r\n      this.dataService.update(product)\r\n        .subscribe(() => this.loadData());\r\n    }\r\n    sender.closeRow(rowIndex);\r\n  }\r\n\r\n  public removeHandler({ dataItem }) {\r\n    this.dataService.delete(dataItem.id)\r\n      .subscribe(() => this.loadData());\r\n  }\r\n\r\n  private closeEditor(grid, rowIndex = this.editedRowIndex) {\r\n    grid.closeRow(rowIndex);\r\n    this.editedRowIndex = undefined;\r\n    this.formGroup = undefined;\r\n  }\r\n\r\n  private authorChange(value) {\r\n    this.formGroup.get('author').setValue(value);\r\n  }\r\n\r\n  private publicationHousesChange(value: Array<any>) {\r\n    this.formGroup.get('publicationHouses').setValue(value);\r\n  }\r\n}\r\n","module.exports = \"<kendo-grid [data]=\\\"brochures.brochures\\\"\\r\\n            [height]=\\\"533\\\"\\r\\n            [pageSize]=\\\"gridState.take\\\" [skip]=\\\"gridState.skip\\\" [sort]=\\\"gridState.sort\\\"\\r\\n            [pageable]=\\\"true\\\" [sortable]=\\\"true\\\"\\r\\n            (dataStateChange)=\\\"onStateChange($event)\\\"\\r\\n            (edit)=\\\"editHandler($event)\\\" (cancel)=\\\"cancelHandler($event)\\\"\\r\\n            (save)=\\\"saveHandler($event)\\\" (remove)=\\\"removeHandler($event)\\\"\\r\\n            (add)=\\\"addHandler($event)\\\"\\r\\n            [navigable]=\\\"true\\\">\\r\\n  <ng-template kendoGridToolbarTemplate>\\r\\n    <button kendoGridAddCommand>Add new</button>\\r\\n  </ng-template>\\r\\n  <kendo-grid-column field=\\\"name\\\" title=\\\"Name\\\"></kendo-grid-column>\\r\\n  <kendo-grid-column field=\\\"typeOfCover\\\" title=\\\"Type Of Cover\\\"></kendo-grid-column>\\r\\n  <kendo-grid-column field=\\\"numberOfPages\\\" title=\\\"Number Of Pages\\\"></kendo-grid-column>\\r\\n  <kendo-grid-command-column title=\\\"command\\\" width=\\\"220\\\">\\r\\n    <ng-template kendoGridCellTemplate let-isNew=\\\"isNew\\\">\\r\\n      <button kendoGridEditCommand [primary]=\\\"true\\\">Edit</button>\\r\\n      <button kendoGridRemoveCommand>Remove</button>\\r\\n      <button kendoGridSaveCommand [disabled]=\\\"formGroup?.invalid\\\">{{ isNew ? 'Add' : 'Update' }}</button>\\r\\n      <button kendoGridCancelCommand>{{ isNew ? 'Discard changes' : 'Cancel' }}</button>\\r\\n    </ng-template>\\r\\n  </kendo-grid-command-column>\\r\\n</kendo-grid>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\nimport { DataService } from '../../services/brochure.service';\r\nimport { AllBrochures } from '../../models/brochure/allBrochures';\r\nimport { BrochureCreateView } from '../../models/brochure/brochureCreateView';\r\nimport { BrochureUpdateView } from '../../models/brochure/brochureUpdateView';\r\n\r\nimport { GridDataResult } from '@progress/kendo-angular-grid';\nimport { State, process } from '@progress/kendo-data-query';\r\n\r\n@Component({\r\n  selector: 'brochure',\r\n  templateUrl: './brochure.component.html',\r\n  providers: [DataService]\r\n})\r\nexport class BrochureComponent implements OnInit {\r\n\n  public brochures: AllBrochures;\n  public gridState: State = {\n    sort: [],\n    skip: 0,\n    take: 10\n  };\n  public formGroup: FormGroup;\n  private editedRowIndex: number;\r\n\r\n  constructor(private dataService: DataService) {\r\n    this.brochures = new AllBrochures();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.loadData();\r\n  }\n\n  private loadData() {\n    this.dataService.get().subscribe(data => this.brochures = data);\r\n  }\n\n  public addHandler({ sender }) {\n    this.closeEditor(sender);\n\n    this.formGroup = new FormGroup(\n      {\n        'id': new FormControl(0),\n        'name': new FormControl('', Validators.required),\n        'typeOfCover': new FormControl('', Validators.required),\n        'numberOfPages': new FormControl('', Validators.compose([Validators.required, Validators.pattern('^[0-9]{1,3}')])),\n      }\n    );\n\n    sender.addRow(this.formGroup);\n  }\n\n  public editHandler({ sender, rowIndex, dataItem }) {\n    this.closeEditor(sender);\n\n    this.formGroup = new FormGroup(\n      {\n        'id': new FormControl(dataItem.id),\n        'name': new FormControl(dataItem.name, Validators.required),\n        'typeOfCover': new FormControl(dataItem.typeOfCover, Validators.required),\n        'numberOfPages': new FormControl(dataItem.numberOfPages, Validators.compose([Validators.required, Validators.pattern('^[0-9]{1,3}')])),\n      }\n    );\n\n    this.editedRowIndex = rowIndex;\n\n    sender.editRow(rowIndex, this.formGroup);\n  }\n\n  public cancelHandler({ sender, rowIndex }) {\n    this.closeEditor(sender, rowIndex);\n  }\n\n  public saveHandler({ sender, rowIndex, formGroup, isNew }) {\n    if (isNew) {\n      const product: BrochureCreateView = formGroup.value;\n      this.dataService.create(product)\r\n        .subscribe(() => this.loadData());\r\n    }\n    if (!isNew) {\n      const product: BrochureUpdateView = formGroup.value;\n      this.dataService.update(product)\r\n        .subscribe(() => this.loadData());\r\n    }\n    sender.closeRow(rowIndex);\n  }\n\n  public removeHandler({ dataItem }) {\n    this.dataService.delete(dataItem.id)\n      .subscribe(() => this.loadData());\n  }\n\n  private closeEditor(grid, rowIndex = this.editedRowIndex) {\n    grid.closeRow(rowIndex);\n    this.editedRowIndex = undefined;\n    this.formGroup = undefined;\n  }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-6 new-user-alert\\\">\\r\\n    <div *ngIf=\\\"brandNew\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\r\\n      <strong>All set!</strong> Please login with your account\\r\\n    </div>\\r\\n    <h2>Login</h2>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-6\\\">\\r\\n    <form #f=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"login(f)\\\">\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"email\\\">Email</label>\\r\\n        <input id=\\\"email\\\" type=\\\"text\\\" required name=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" [ngModel]=\\\"credentials.email\\\" #email=\\\"ngModel\\\" tmFocus validateEmail>\\r\\n        <small [hidden]=\\\"email.valid || (email.pristine && !submitted)\\\" class=\\\"text-danger\\\">Please enter a valid email</small>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"password\\\">Password</label>\\r\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" required name=\\\"password\\\" placeholder=\\\"Password\\\" ngModel>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"f.invalid || isRequesting\\\">Login</button>\\r\\n        <!--<app-spinner [isRunning]=\\\"isRequesting\\\"></app-spinner>-->\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"errors\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n        <strong>Oops!</strong> {{errors}}\\r\\n      </div>\\r\\n\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".new-user-alert {\\n  padding-top: 2.5rem; }\\n\"","import { Subscription } from 'rxjs';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { Credentials } from '../../models/identity/interfaces/credentials.interface';\r\nimport { UserService } from '../../services/identity/user.service';\r\nimport { Local } from 'protractor/built/driverProviders';\r\n\r\n@Component({\r\n  selector: 'app-login-form',\r\n  templateUrl: './login-form.component.html',\r\n  styleUrls: ['./login-form.component.scss']\r\n})\r\n\r\nexport class LoginFormComponent implements OnInit, OnDestroy {\r\n\r\n  private subscription: Subscription;\r\n\r\n  brandNew: boolean;\r\n  errors: string;\r\n  isRequesting: boolean;\r\n  submitted: boolean = false;\r\n  credentials: Credentials = { email: '', password: '' };\r\n\r\n  constructor(private userService: UserService, private router: Router, private activatedRoute: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n\r\n    // subscribe to router event\r\n    this.subscription = this.activatedRoute.queryParams.subscribe(\r\n      (param: any) => {\r\n        this.brandNew = param['brandNew'];\r\n        this.credentials.email = param['email'];\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // prevent memory leak by unsubscribing\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  login({ value, valid }: { value: Credentials, valid: boolean }) {\r\n    this.submitted = true;\r\n    this.isRequesting = true;\r\n    this.errors = '';\r\n    if (valid) {\r\n      debugger;\r\n      this.userService.login(value.email, value.password)\r\n        .subscribe(\r\n        result => {\r\n          if (result /*&& result.lenght > 0*/) {\r\n              localStorage.setItem(\"loginData\", result);\r\n              this.router.navigate(['/book']);\r\n            }\r\n            else {\r\n              this.router.navigate(['/login']);\r\n            }\r\n          },\r\n          error => this.errors = error);\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<kendo-grid [data]=\\\"magazines.magazines\\\"\\r\\n            [height]=\\\"533\\\"\\r\\n            [pageSize]=\\\"gridState.take\\\" [skip]=\\\"gridState.skip\\\" [sort]=\\\"gridState.sort\\\"\\r\\n            [pageable]=\\\"true\\\" [sortable]=\\\"true\\\"\\r\\n            (dataStateChange)=\\\"onStateChange($event)\\\"\\r\\n            (edit)=\\\"editHandler($event)\\\" (cancel)=\\\"cancelHandler($event)\\\"\\r\\n            (save)=\\\"saveHandler($event)\\\" (remove)=\\\"removeHandler($event)\\\"\\r\\n            (add)=\\\"addHandler($event)\\\"\\r\\n            [navigable]=\\\"true\\\">\\r\\n  <ng-template kendoGridToolbarTemplate>\\r\\n    <button kendoGridAddCommand>Add new</button>\\r\\n  </ng-template>\\r\\n  <kendo-grid-column field=\\\"name\\\" title=\\\"Name\\\"></kendo-grid-column>\\r\\n  <kendo-grid-column field=\\\"number\\\" title=\\\"Number\\\"></kendo-grid-column>\\r\\n  <kendo-grid-column field=\\\"yearOfPublication\\\" title=\\\"Year Of Publication\\\"></kendo-grid-column>\\r\\n  <kendo-grid-command-column title=\\\"command\\\" width=\\\"220\\\">\\r\\n    <ng-template kendoGridCellTemplate let-isNew=\\\"isNew\\\">\\r\\n      <button kendoGridEditCommand [primary]=\\\"true\\\">Edit</button>\\r\\n      <button kendoGridRemoveCommand>Remove</button>\\r\\n      <button kendoGridSaveCommand [disabled]=\\\"formGroup?.invalid\\\">{{ isNew ? 'Add' : 'Update' }}</button>\\r\\n      <button kendoGridCancelCommand>{{ isNew ? 'Discard changes' : 'Cancel' }}</button>\\r\\n    </ng-template>\\r\\n  </kendo-grid-command-column>\\r\\n</kendo-grid>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\nimport { DataService } from '../../services/magazine.service';\r\nimport { AllMagazines } from '../../models/magazine/allMagazines';\r\nimport { MagazineUpdateView } from '../../models/magazine/MagazineUpdateView';\r\nimport { MagazineCreateView } from '../../models/magazine/magazineCreateView';\r\n\r\nimport { GridDataResult } from '@progress/kendo-angular-grid';\nimport { State, process } from '@progress/kendo-data-query';\r\n\r\n@Component({\r\n  selector: 'magazine',\r\n  templateUrl: './magazine.component.html',\r\n  providers: [DataService]\r\n})\r\n\r\nexport class MagazineComponent implements OnInit {\r\n\n  public magazines: AllMagazines;\n  public gridState: State = {\n    sort: [],\n    skip: 0,\n    take: 10\n  };\n  public formGroup: FormGroup;\n  private editedRowIndex: number;\r\n\r\n  constructor(private dataService: DataService) {\r\n    this.magazines = new AllMagazines();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.loadData();\r\n  }\n\n  private loadData() {\n    this.dataService.get().subscribe(data => this.magazines = data);\r\n  }\n\n  public addHandler({ sender }) {\n    this.closeEditor(sender);\n\n    this.formGroup = new FormGroup(\n      {\n        'id': new FormControl(0),\n        'name': new FormControl('', Validators.required),\n        'yearOfPublication': new FormControl('', Validators.compose([Validators.required, Validators.pattern('^[0-9]{4}')])),\n        'number': new FormControl('', Validators.compose([Validators.required, Validators.pattern('^[0-9]{1,3}')])),\n      }\n    );\n    \n    sender.addRow(this.formGroup);\n  }\n\n  public editHandler({ sender, rowIndex, dataItem }) {\n    this.closeEditor(sender);\n\n    this.formGroup = new FormGroup(\n      {\n        'id': new FormControl(dataItem.id),\n        'name': new FormControl(dataItem.name, Validators.required),\n        'yearOfPublication': new FormControl(dataItem.yearOfPublication, Validators.compose([Validators.required, Validators.pattern('^[0-9]{4}')])),\n        'number': new FormControl(dataItem.number, Validators.compose([Validators.required, Validators.pattern('^[0-9]{1,3}')])),\n      }\n    );\n\n    this.editedRowIndex = rowIndex;\n\n    sender.editRow(rowIndex, this.formGroup);\n  }\n\n  public cancelHandler({ sender, rowIndex }) {\n    this.closeEditor(sender, rowIndex);\n  }\n\n  public saveHandler({ sender, rowIndex, formGroup, isNew }) {\n    if (isNew) {\n      const product: MagazineCreateView = formGroup.value;\n      this.dataService.create(product)\r\n        .subscribe(() => this.loadData());\r\n    }\n    if (!isNew) {\n      const product: MagazineUpdateView = formGroup.value;\n      this.dataService.update(product)\r\n        .subscribe(() => this.loadData());\r\n    }\n    sender.closeRow(rowIndex);\n  }\n\n  public removeHandler({ dataItem }) {\n    this.dataService.delete(dataItem.id)\n      .subscribe(() => this.loadData());\n  }\n\n  private closeEditor(grid, rowIndex = this.editedRowIndex) {\n    grid.closeRow(rowIndex);\n    this.editedRowIndex = undefined;\n    this.formGroup = undefined;\n  }\r\n}\r\n","module.exports = \"li .glyphicon {\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\nli.link-active a,\\r\\nli.link-active a:hover,\\r\\nli.link-active a:focus {\\r\\n    background-color: #4189C7;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.main-nav {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    z-index: 1;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n    .main-nav {\\r\\n        height: 100%;\\r\\n        width: calc(25% - 20px);\\r\\n    }\\r\\n    .navbar {\\r\\n        border-radius: 0px;\\r\\n        border-width: 0px;\\r\\n        height: 100%;\\r\\n    }\\r\\n    .navbar-header {\\r\\n        float: none;\\r\\n    }\\r\\n    .navbar-collapse {\\r\\n        border-top: 1px solid #444;\\r\\n        padding: 0px;\\r\\n    }\\r\\n    .navbar ul {\\r\\n        float: none;\\r\\n    }\\r\\n    .navbar li {\\r\\n        float: none;\\r\\n        font-size: 15px;\\r\\n        margin: 6px;\\r\\n    }\\r\\n    .navbar li a {\\r\\n        padding: 10px 16px;\\r\\n        border-radius: 4px;\\r\\n    }\\r\\n    .navbar a {\\r\\n        width: 100%;\\r\\n        white-space: nowrap;\\r\\n        overflow: hidden;\\r\\n        text-overflow: ellipsis;\\r\\n    }\\r\\n}\\r\\n\"","module.exports = \"<div class='main-nav'>\\r\\n  <div class='navbar navbar-inverse'>\\r\\n    <div class='navbar-header'>\\r\\n      <button type='button' class='navbar-toggle' data-toggle='collapse' data-target='.navbar-collapse'>\\r\\n        <span class='sr-only'>Toggle navigation</span>\\r\\n        <span class='icon-bar'></span>\\r\\n        <span class='icon-bar'></span>\\r\\n        <span class='icon-bar'></span>\\r\\n      </button>\\r\\n      <a class='navbar-brand' [routerLink]=\\\"['/home']\\\">Library.WEB</a>\\r\\n    </div>\\r\\n    <div class='clearfix'></div>\\r\\n    <div class='navbar-collapse collapse'>\\r\\n      <ul class='nav navbar-nav'>\\r\\n        <li [routerLinkActive]=\\\"['link-active']\\\">\\r\\n          <a [routerLink]=\\\"['/book']\\\">\\r\\n            <span class='glyphicon glyphicon-education'></span> Books\\r\\n          </a>\\r\\n        </li>\\r\\n        <li [routerLinkActive]=\\\"['link-active']\\\">\\r\\n          <a [routerLink]=\\\"['/magazine']\\\">\\r\\n            <span class='glyphicon glyphicon-education'></span> Magazines\\r\\n          </a>\\r\\n        </li>\\r\\n        <li [routerLinkActive]=\\\"['link-active']\\\">\\r\\n          <a [routerLink]=\\\"['/brochure']\\\">\\r\\n            <span class='glyphicon glyphicon-education'></span> Brochures\\r\\n          </a>\\r\\n        </li>\\r\\n        <li [routerLinkActive]=\\\"['link-active']\\\">\\r\\n          <a [routerLink]=\\\"['/author']\\\">\\r\\n            <span class='glyphicon glyphicon-education'></span> Authors\\r\\n          </a>\\r\\n        </li>\\r\\n        <li [routerLinkActive]=\\\"['link-active']\\\">\\r\\n          <a [routerLink]=\\\"['/publicationHouse']\\\">\\r\\n            <span class='glyphicon glyphicon-education'></span> PublicationHouses\\r\\n          </a>\\r\\n        </li>\\r\\n        <li [routerLinkActive]=\\\"['link-active']\\\">\\r\\n          <a [routerLink]=\\\"['/user']\\\">\\r\\n            <span class='glyphicon glyphicon-king'></span> User\\r\\n          </a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'nav-menu',\r\n    templateUrl: './navmenu.component.html',\r\n    styleUrls: ['./navmenu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n}\r\n","module.exports = \"<kendo-grid [data]=\\\"publicationHouses.publicationHouses\\\"\\r\\n            [height]=\\\"533\\\"\\r\\n            [pageSize]=\\\"gridState.take\\\" [skip]=\\\"gridState.skip\\\" [sort]=\\\"gridState.sort\\\"\\r\\n            [pageable]=\\\"true\\\" [sortable]=\\\"true\\\"\\r\\n            (dataStateChange)=\\\"onStateChange($event)\\\"\\r\\n            (edit)=\\\"editHandler($event)\\\" (cancel)=\\\"cancelHandler($event)\\\"\\r\\n            (save)=\\\"saveHandler($event)\\\" (remove)=\\\"removeHandler($event)\\\"\\r\\n            (add)=\\\"addHandler($event)\\\"\\r\\n            [navigable]=\\\"true\\\">\\r\\n  <ng-template kendoGridToolbarTemplate>\\r\\n    <button kendoGridAddCommand>Add new</button>\\r\\n  </ng-template>\\r\\n  <kendo-grid-column field=\\\"name\\\" title=\\\"Name\\\"></kendo-grid-column>\\r\\n  <kendo-grid-column field=\\\"adress\\\" title=\\\"Adress\\\"></kendo-grid-column>\\r\\n  <kendo-grid-command-column title=\\\"command\\\" width=\\\"220\\\">\\r\\n    <ng-template kendoGridCellTemplate let-isNew=\\\"isNew\\\">\\r\\n      <button kendoGridEditCommand [primary]=\\\"true\\\">Edit</button>\\r\\n      <button kendoGridRemoveCommand>Remove</button>\\r\\n      <button kendoGridSaveCommand [disabled]=\\\"formGroup?.invalid\\\">{{ isNew ? 'Add' : 'Update' }}</button>\\r\\n      <button kendoGridCancelCommand>{{ isNew ? 'Discard changes' : 'Cancel' }}</button>\\r\\n    </ng-template>\\r\\n  </kendo-grid-command-column>\\r\\n</kendo-grid>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\nimport { PublicationHouseService } from '../../services/publicationHouse.service';\r\nimport { AllPublicationHouses } from '../../models/publicationHouse/allPublicationHouses';\r\nimport { PublicationHouseCreateView } from '../../models/publicationHouse/publicationHouseCreateView';\r\nimport { PublicationHouseUpdateView } from '../../models/publicationHouse/publicationHouseUpdateView';\r\n\r\nimport { GridDataResult } from '@progress/kendo-angular-grid';\nimport { State, process } from '@progress/kendo-data-query';\r\n\r\n@Component({\r\n    selector: 'publicationHouse',\r\n    templateUrl: './publicationHouse.component.html',\r\n  providers: [PublicationHouseService]\r\n})\r\nexport class PublicationHouseComponent implements OnInit {\r\n    \r\n  public publicationHouses: AllPublicationHouses;\n  public gridState: State = {\n    sort: [],\n    skip: 0,\n    take: 10\n  };\n  public formGroup: FormGroup;\n  private editedRowIndex: number;\r\n\r\n  constructor(private dataService: PublicationHouseService) {\r\n    this.publicationHouses = new AllPublicationHouses();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.loadData();\r\n  }\n\n  private loadData() {\n    this.dataService.get().subscribe(data => this.publicationHouses = data);\r\n  }\n\n  public addHandler({ sender }) {\n    this.closeEditor(sender);\n\n    this.formGroup = new FormGroup(\n      {\n        'id': new FormControl(0),\n        'name': new FormControl('', Validators.required),\n        'adress': new FormControl('', Validators.required)\n      }\n    );\n\n    sender.addRow(this.formGroup);\n  }\n\n  public editHandler({ sender, rowIndex, dataItem }) {\n    this.closeEditor(sender);\n\n    this.formGroup = new FormGroup(\n      {\n        'id': new FormControl(dataItem.id),\n        'name': new FormControl(dataItem.name, Validators.required),\n        'adress': new FormControl(dataItem.adress, Validators.required)\n      }\n    );\n\n    this.editedRowIndex = rowIndex;\n\n    sender.editRow(rowIndex, this.formGroup);\n  }\n\n  public cancelHandler({ sender, rowIndex }) {\n    this.closeEditor(sender, rowIndex);\n  }\n\n  public saveHandler({ sender, rowIndex, formGroup, isNew }) {\n    if (isNew) {\n      const product: PublicationHouseCreateView = formGroup.value;\n      this.dataService.create(product)\r\n        .subscribe(() => this.loadData());\r\n    }\n    if (!isNew) {\n      const product: PublicationHouseUpdateView = formGroup.value;\n      this.dataService.update(product)\r\n        .subscribe(() => this.loadData());\r\n    }\n    sender.closeRow(rowIndex);\n  }\n\n  public removeHandler({ dataItem }) {\n    this.dataService.delete(dataItem.id)\n      .subscribe(() => this.loadData());\n  }\n\n  private closeEditor(grid, rowIndex = this.editedRowIndex) {\n    grid.closeRow(rowIndex);\n    this.editedRowIndex = undefined;\n    this.formGroup = undefined;\n  }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-6\\\">\\r\\n    <h2>Please enter your information</h2>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-6\\\">\\r\\n    <form #f=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"registerUser(f)\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"first-name\\\">First name</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"first-name\\\" placeholder=\\\"First name\\\" name=\\\"firstName\\\" tmFocus ngModel>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"last-name\\\">Last name</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"last-name\\\" placeholder=\\\"Last name\\\" name=\\\"lastName\\\" ngModel>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"email\\\">Email</label>\\r\\n        <input id=\\\"email\\\" type=\\\"text\\\" required name=\\\"email\\\" validateEmail class=\\\"form-control\\\" placeholder=\\\"Email\\\" ngModel #email=\\\"ngModel\\\">\\r\\n        <small [hidden]=\\\"email.valid || (email.pristine && !submitted)\\\" class=\\\"text-danger\\\">Please enter a valid email</small>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"password\\\">Password</label>\\r\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" ngModel>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"f.invalid || isRequesting\\\">Sign Up</button>\\r\\n        <!--<app-spinner [isRunning]=\\\"isRequesting\\\"></app-spinner>-->\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"errors\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n        <strong>Oops!</strong> {{errors}}\\r\\n      </div>\\r\\n\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { UserRegistration } from '../../models/identity/interfaces/user.registration.interface';\r\nimport { UserService } from '../../services/identity/user.service';\r\n\r\n@Component({\r\n  selector: 'app-registration-form',\r\n  templateUrl: './registration-form.component.html',\r\n  //styleUrls: ['./registration-form.component.scss']\r\n})\r\nexport class RegistrationFormComponent implements OnInit {\r\n\r\n  errors: string;\r\n  isRequesting: boolean;\r\n  submitted: boolean = false;\r\n\r\n  constructor(private userService: UserService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  registerUser({ value, valid }: { value: UserRegistration, valid: boolean }) {\r\n    this.submitted = true;\r\n    this.isRequesting = true;\r\n    this.errors = '';\r\n    if (valid) {\r\n      this.userService.register(value.email, value.password, value.firstName, value.lastName)\r\n        .finally(() => this.isRequesting = false)\r\n        .subscribe(\r\n          result => {\r\n            if (result) {\r\n              this.router.navigate(['/login'], { queryParams: { brandNew: true, email: value.email } });\r\n            }\r\n          },\r\n          errors => this.errors = errors);\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<header>\\r\\n  <nav class=\\\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\\\">\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\">\\r\\n\\r\\n      <ul *ngIf=\\\"status\\\" class=\\\"nav navbar-nav\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\" routerLink=\\\"/user\\\">Logoff</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n\\r\\n      <ul *ngIf=\\\"!status\\\" class=\\\"nav navbar-nav\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/register\\\">Email signup</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/login\\\">Email login</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-6 col-sm-3\\\">\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../services/identity/user.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n  selector: 'user',\r\n  templateUrl: './user.component.html',\r\n  providers: [UserService]\r\n})\r\n\r\nexport class UserComponent implements OnInit {\r\n  email: string;\r\n  status: boolean;\r\n  subscription: Subscription;\r\n\r\n  constructor(private userService: UserService) {\r\n  }\r\n\r\n  logout() {\r\n    this.userService.logout();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.userService.authNavStatus$.subscribe(status => this.status = status);\r\n    this.email = localStorage.getItem(\"loginData\");\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // prevent memory leak when component is destroyed\r\n    this.subscription.unsubscribe();\r\n  }\n}\n","import { AuthorGetView } from \"./authorGetView\";\r\n\r\nexport class AllAuthors {\r\n    constructor() {\r\n        this.authors = new Array<AuthorGetView>()\r\n    }\r\n  public authors: AuthorGetView[];\r\n}\r\n","import { BookGetView } from \"./bookGetView\";\r\n\r\nexport class AllBooks {\r\n    constructor() {\r\n        this.books = new Array<BookGetView>();\r\n    }\r\n  public books: BookGetView[];\r\n}\r\n","import { BrochureGetView } from \"./brochureGetView\";\r\n\r\nexport class AllBrochures {\r\n    constructor(\r\n    ) {\r\n        this.brochures = new Array<BrochureGetView>();\r\n    }\r\n    public brochures: BrochureGetView[]\r\n\r\n}\r\n","export class User {\r\n  constructor(\r\n  public userName: string,\r\n  public password: string) { }\r\n}\r\n","export class UserRegistration {\r\n  constructor(\r\n    public email: string,\r\n    public password: string,\r\n    public firstName: string,\r\n    public lastName: string) { }\r\n}\r\n","import { MagazineGetView } from \"./magazineGetView\";\r\n\r\nexport class AllMagazines {\r\n    constructor() {\r\n        this.magazines = new Array<MagazineGetView>();\r\n    }\r\n  public magazines: MagazineGetView[];\r\n}\r\n","import { PublicationHouseGetView } from \"./publicationHouseGetView\";\r\n\r\nexport class AllPublicationHouses {\r\n    constructor() {\r\n        this.publicationHouses = new Array<PublicationHouseGetView>();\r\n    }\r\n    public publicationHouses: PublicationHouseGetView[];\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { AllAuthors } from '../models/author/allAuthors';\r\nimport { AuthorCreateView } from '../models/author/authorCreateView';\r\nimport { AuthorUpdateView } from '../models/author/authorUpdateView';\r\n\n@Injectable()\nexport class AuthorService {\n\n  private url: string = \"/api/Author\";\n\n  constructor(private http: HttpClient) { }\n\n  public get() {\n    return this.http.get<AllAuthors>(this.url);\r\n  }\n  public create(item: AuthorCreateView) {\r\n    return this.http.post(this.url, item)\r\n  }\r\n  public update(item: AuthorUpdateView) {\r\n    return this.http.put(this.url, item)\r\n  }\r\n  public delete(id?: number) {\r\n    return this.http.delete(`${this.url}/${id}`);\r\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { AllBooks } from '../models/book/allBooks';\r\nimport { BookCreateView } from '../models/book/bookCreateView';\r\nimport { BookUpdateView } from '../models/book/bookUpdateView';\r\n\r\n@Injectable()\r\nexport class BookService {\r\n\r\n  private url: string = \"/api/Book\";\n\n  constructor(private http: HttpClient) { }\n\n  public get() {\n    return this.http.get<AllBooks>(this.url);\r\n  }\n  public create(item: BookCreateView) {\r\n    return this.http.post(this.url, item)\r\n  }\r\n  public update(item: BookUpdateView) {\r\n    return this.http.put(this.url, item)\r\n  }\r\n  public delete(id?: number) {\r\n    return this.http.delete(`${this.url}/${id}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\r\nimport { AllBrochures } from '../models/brochure/allBrochures';\r\nimport { BrochureCreateView } from '../models/brochure/brochureCreateView';\r\nimport { BrochureUpdateView } from '../models/brochure/brochureUpdateView';\r\n\n@Injectable()\nexport class DataService {\n\n  private url: string = \"/api/Brochure\";\n\n  constructor(private http: HttpClient) { }\n\n  public get() {\n    return this.http.get<AllBrochures>(this.url);\r\n  }\n  public create(item: BrochureCreateView) {\r\n    return this.http.post(this.url, item)\r\n  }\r\n  public update(item: BrochureUpdateView) {\r\n    return this.http.put(this.url, item)\r\n  }\r\n  public delete(id?: number) {\r\n    return this.http.delete(`${this.url}/${id}`);\r\n  }\n}\n","import { Observable } from 'rxjs/Rx';\r\n\r\n\r\nexport abstract class BaseService {\r\n\r\n  constructor() { }\r\n\r\n  protected handleError(error: any) {\r\n    debugger;\r\n    var applicationError = error.headers.get('Application-Error');\r\n\r\n    // either applicationError in header or model error in body\r\n    if (applicationError) {\r\n      return Observable.throw(applicationError);\r\n    }\r\n\r\n    var modelStateErrors: string = '';\r\n    var serverError = error.json();\r\n\r\n    if (!serverError.type) {\r\n      for (var key in serverError) {\r\n        if (serverError[key])\r\n          modelStateErrors += serverError[key] + '\\n';\r\n      }\r\n    }\r\n\r\n    modelStateErrors = modelStateErrors = '' ? null : modelStateErrors;\r\n    return Observable.throw(modelStateErrors || 'Server error');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders, HttpRequest } from '@angular/common/http';\n\r\nimport { BaseService } from \"./base.service\";\r\nimport { BehaviorSubject } from 'rxjs/Rx';\r\nimport { UserRegistration } from '../../models/identity/userRegistration';\r\nimport { User } from '../../models/identity/user';\r\nimport { ObservableInput } from 'rxjs';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class UserService extends BaseService {\r\n\r\n  private _authNavStatusSource = new BehaviorSubject<boolean>(false);\r\n  authNavStatus$ = this._authNavStatusSource.asObservable();\r\n\r\n  private loggedIn = false;\r\n\r\n  constructor(private http: HttpClient) {\r\n    super();\r\n    this.loggedIn = !!localStorage.getItem(\"loginData\");\r\n    this._authNavStatusSource.next(this.loggedIn);\r\n  }\r\n\r\n  register(email: string, password: string, firstName: string, lastName: string) {\r\n    let user = new UserRegistration(email, password, firstName, lastName);\r\n    return this.http.post('api/Account/Register', user)\r\n      .map(res => true)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  login(userName, password): Observable<any> {\r\n    let user = new User(userName, password);\r\n    return this.http.post('api/Account/Login', user, { responseType: 'text'})\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"loginData\");\r\n    this.loggedIn = false;\r\n    this._authNavStatusSource.next(false);\r\n  }\r\n\r\n  isLoggedIn() {\r\n    return this.loggedIn;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { AllMagazines } from '../models/magazine/allMagazines';\r\nimport { MagazineCreateView } from '../models/magazine/magazineCreateView';\r\nimport { MagazineUpdateView } from '../models/magazine/MagazineUpdateView';\r\n\n@Injectable()\nexport class DataService {\n  \n  private url: string = \"/api/Magazine\";\n\n  constructor(private http: HttpClient) { }\n\n  public get() {\n    return this.http.get<AllMagazines>(this.url);\r\n  }\n  public create(item: MagazineCreateView) {\r\n    return this.http.post(this.url, item)\r\n  }\r\n  public update(item: MagazineUpdateView) {\r\n    return this.http.put(this.url, item)\r\n  }\r\n  public delete(id?: number) {\r\n    return this.http.delete(`${this.url}/${id}`);\r\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { AllPublicationHouses } from '../models/publicationHouse/allPublicationHouses';\r\nimport { PublicationHouseCreateView } from '../models/publicationHouse/publicationHouseCreateView';\r\nimport { PublicationHouseUpdateView } from '../models/publicationHouse/publicationHouseUpdateView';\r\n\r\n@Injectable()\r\nexport class PublicationHouseService {\r\n\r\n  private url = \"/api/PublicationHouse\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public get() {\n    return this.http.get<AllPublicationHouses>(this.url);\r\n  }\n  public create(item: PublicationHouseCreateView) {\r\n    return this.http.post(this.url, item)\r\n  }\r\n  public update(item: PublicationHouseUpdateView) {\r\n    return this.http.put(this.url, item)\r\n  }\r\n  public delete(id?: number) {\r\n    return this.http.delete(`${this.url}/${id}`);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}